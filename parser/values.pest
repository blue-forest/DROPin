value           =  { (s ~ value_inline) | (i ~ value_newline ~ DROP) }
value_inline    = _{ setter | getter | binary | quantity | boolean | text }
value_newline   = _{ list | object }
list            =  { list_item ~ (n ~ list_item)* }
list_item       = _{ value_inline | ("\\" ~ i ~ value_newline ~ DROP) }
object          =  { key_value ~ ( n ~ key_value )* }
key_value       =  { key ~ value }
getter          =  { "$" ~ query }
boolean         =  { "true" | "false" }
quantity        =  @{
  "-"?
  ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
  ~ ("." ~ ASCII_DIGIT*)?
  ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}// TODO: decimals (copy json)
binary          =  { "0" ~ ( "b" ~ bits | "x" ~ hexa ) }
bits            =  { ("0"|"1")+ }
hexa            =  { ('0'..'9'|'a'..'f'|'A'..'F')+ }
text            = _{ "\"" ~ text_inner ~ "\"" }
text_inner      = @{ char* }
char            =  {
  !("\"" | "\\") ~ ANY
  | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
  | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

setter          =  { setter_not | setter_long | setter_short }
setter_short    =  {
  "(" ~ s?
    ~ value_inline ~ s? ~ setter_operator ~ s? ~ value_inline
  ~ s? ~ ")"
}
setter_long     =  { "~" ~ key ~ value? }
setter_not      =  { "!" ~ value_inline }
setter_operator =  { binary_op | comparator | arithmetic | logic }
comparator      = _{ "=" | "!" | ">=" | "<=" | ">" | "<" }
arithmetic      = _{ "+" | "-" | "/" | "*" | "^" | "%" }
logic           = _{ "|" | "&" }
binary_op       = _{ ">>" | "<<" }
