{"config":{"indexing":"full","lang":["en","fr"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction drop'in is a technology for creating cross-platform applications (web, Android and iOS) based on a single code written in files called recipes . All aspects of your project are defined in recipes, from the graphical interface to the business logic and data management, so you don't need to know any programming language to create your application. Blue Forest , a French company based at Marseille, is currently developing this technology and uses drop'in to create applications for its clients. After many years of research and development, we believe that this technology can be useful to a larger number of organizations and individuals, so we decided to make it accessible to everyone. We have published this documentation to introduce the basic concepts of drop'in and to help you understand how you can use it to create your own applications. At the moment we are working on a free restricted version of drop'in that will soon be available under the name alpha . We invite you to fill out this form if you want to participate in this test phase. We will also publish more informations on this documentation as our work progresses. When the alpha period will end, we will release a beta version that will be accessible to everyone, and then a stable version that will be the final version of drop'in. drop'in is an open-source technology whose compiler will be released under the AGPL license, and we will also provide paid tools to facilitate the collaborative creation of your applications and their publication with the automation of deployment and update tasks. All its features are described in the dropin.cloud section of this documentation , so you will be able to easily identify which features will be free and which will be paid. If you have any questions, feel free to contact us by email at dropin@blueforest.cc or on GitHub in the Discussions section of our repository . Internationalization This documentation is also available in French . You can change the language of the documentation by using the language selector at the top right of the page, aside the search bar. If you want to contribute to the translation of this documentation, you can do it on GitHub by creating a Pull Request . License The content of this repository is licensed under a CC BY-NC-SA 4.0 license, you may redistribute it and/or modify it under the terms of the license. Concerning the source code, it is licensed under the MIT license.","title":"Introduction"},{"location":"#introduction","text":"drop'in is a technology for creating cross-platform applications (web, Android and iOS) based on a single code written in files called recipes . All aspects of your project are defined in recipes, from the graphical interface to the business logic and data management, so you don't need to know any programming language to create your application. Blue Forest , a French company based at Marseille, is currently developing this technology and uses drop'in to create applications for its clients. After many years of research and development, we believe that this technology can be useful to a larger number of organizations and individuals, so we decided to make it accessible to everyone. We have published this documentation to introduce the basic concepts of drop'in and to help you understand how you can use it to create your own applications. At the moment we are working on a free restricted version of drop'in that will soon be available under the name alpha . We invite you to fill out this form if you want to participate in this test phase. We will also publish more informations on this documentation as our work progresses. When the alpha period will end, we will release a beta version that will be accessible to everyone, and then a stable version that will be the final version of drop'in. drop'in is an open-source technology whose compiler will be released under the AGPL license, and we will also provide paid tools to facilitate the collaborative creation of your applications and their publication with the automation of deployment and update tasks. All its features are described in the dropin.cloud section of this documentation , so you will be able to easily identify which features will be free and which will be paid. If you have any questions, feel free to contact us by email at dropin@blueforest.cc or on GitHub in the Discussions section of our repository .","title":"Introduction"},{"location":"#internationalization","text":"This documentation is also available in French . You can change the language of the documentation by using the language selector at the top right of the page, aside the search bar. If you want to contribute to the translation of this documentation, you can do it on GitHub by creating a Pull Request .","title":"Internationalization"},{"location":"#license","text":"The content of this repository is licensed under a CC BY-NC-SA 4.0 license, you may redistribute it and/or modify it under the terms of the license. Concerning the source code, it is licensed under the MIT license.","title":"License"},{"location":"cloud/","text":"dropin.cloud dropin.cloud is a cloud service provided by Blue Forest to help you create and manage your applications based on the drop'in technology. It is currently in an alpha phase and is not yet accessible to everyone. If you want to participate in this test phase, you can fill out this form but be aware that the accesses will not be launched until we have finalized all the necessary preparations. dropin.cloud ecosystem will be composed of four main services: Studio : create your applications based on Models Editor : daily manage your data structure Catalog : a marketplace of drop'in Models and Projects Community : a place to share your creations and find inspiration Studio Studio allows you to describe a logical and visual behavior in the form of Models . For all Interfaces concepts, Studio will allow you to visualize in real time the changes you make to your application. Via an interactive editor, you can easily manage for example your Components and your Styles . For more algorithmic concepts, Studio will allow you to describe your application in the form of interactive blocks and assemble them to define for example your Functions . For each concept of a Model , Studio will allow you to describe your application without having to write a single line of code. However, if you want to go further, you can still edit the source code of your application directly from Studio. Community Here are some features that we have planned for this service: Publications: activity feed linked to the Fediverse with ActivityPub Messages: private messages between users encrypted end-to-end Manuals: write and share your documentations privately or publicly Translations: tool to easily translate your content Tasks: manage your projects with tasks and subtasks","title":"dropin.cloud"},{"location":"cloud/#dropincloud","text":"dropin.cloud is a cloud service provided by Blue Forest to help you create and manage your applications based on the drop'in technology. It is currently in an alpha phase and is not yet accessible to everyone. If you want to participate in this test phase, you can fill out this form but be aware that the accesses will not be launched until we have finalized all the necessary preparations. dropin.cloud ecosystem will be composed of four main services: Studio : create your applications based on Models Editor : daily manage your data structure Catalog : a marketplace of drop'in Models and Projects Community : a place to share your creations and find inspiration","title":"dropin.cloud"},{"location":"cloud/#studio","text":"Studio allows you to describe a logical and visual behavior in the form of Models . For all Interfaces concepts, Studio will allow you to visualize in real time the changes you make to your application. Via an interactive editor, you can easily manage for example your Components and your Styles . For more algorithmic concepts, Studio will allow you to describe your application in the form of interactive blocks and assemble them to define for example your Functions . For each concept of a Model , Studio will allow you to describe your application without having to write a single line of code. However, if you want to go further, you can still edit the source code of your application directly from Studio.","title":"Studio"},{"location":"cloud/#community","text":"Here are some features that we have planned for this service: Publications: activity feed linked to the Fediverse with ActivityPub Messages: private messages between users encrypted end-to-end Manuals: write and share your documentations privately or publicly Translations: tool to easily translate your content Tasks: manage your projects with tasks and subtasks","title":"Community"},{"location":"roadmap/","text":"Roadmap The development of drop'in was divided into seasons and episodes : we have been going from version to version since 2016 and we are currently at episode 2 of season 6. During our journey we went through several technical stacks with a multitude of sandboxes which allowed us to progressively establish a set of features and define core concepts. In previous seasons, drop'in was used as part of Blue Forest 's services to create cross-platform applications for its clients. Today, we have finalized the specifications of drop'in to make it available publicly allowing anyone to build their own applications in total autonomy. This documentation is in progress, we invite you to visit our GitHub repository to follow the next updates. Starting next episodes, we will post more details on this page.","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"The development of drop'in was divided into seasons and episodes : we have been going from version to version since 2016 and we are currently at episode 2 of season 6. During our journey we went through several technical stacks with a multitude of sandboxes which allowed us to progressively establish a set of features and define core concepts. In previous seasons, drop'in was used as part of Blue Forest 's services to create cross-platform applications for its clients. Today, we have finalized the specifications of drop'in to make it available publicly allowing anyone to build their own applications in total autonomy. This documentation is in progress, we invite you to visit our GitHub repository to follow the next updates. Starting next episodes, we will post more details on this page.","title":"Roadmap"},{"location":"concepts/","text":"Concepts A drop'in Concept is a set of features that allows you to describe a specific need. In other words, we have created a Concept for each aspect that you may need when creating an application. You will find all the Concepts available on drop'in in this section. For each Concept, you will find a description of its operation and examples of use. In addition, thanks to Studio you can describe your application without having to write code or know all the specifications of the Recipes because all drop'in Concepts are accessible via a graphical interface.","title":"Concepts"},{"location":"concepts/#concepts","text":"A drop'in Concept is a set of features that allows you to describe a specific need. In other words, we have created a Concept for each aspect that you may need when creating an application. You will find all the Concepts available on drop'in in this section. For each Concept, you will find a description of its operation and examples of use. In addition, thanks to Studio you can describe your application without having to write code or know all the specifications of the Recipes because all drop'in Concepts are accessible via a graphical interface.","title":"Concepts"},{"location":"concepts/auth/","text":"Auth Auth allows the Owners to identify themselves and be assigned specific access.","title":"Auth"},{"location":"concepts/auth/#auth","text":"Auth allows the Owners to identify themselves and be assigned specific access.","title":"Auth"},{"location":"concepts/auth/groups/","tags":["alpha"],"text":"Groups Groups describe the access of a User on the resources of an Owner such as: the access to an Organization (administration, billing, access, Tokens , Realms , Payments, ...) Models (creation, modification, deletion, ...) Projects by specifying for each the Permissions to use Once created, a Group can be assigned to Users . It is even possible to assign additional conditions to create sub-groups.","title":"Groups"},{"location":"concepts/auth/groups/#groups","text":"Groups describe the access of a User on the resources of an Owner such as: the access to an Organization (administration, billing, access, Tokens , Realms , Payments, ...) Models (creation, modification, deletion, ...) Projects by specifying for each the Permissions to use Once created, a Group can be assigned to Users . It is even possible to assign additional conditions to create sub-groups.","title":"Groups"},{"location":"concepts/auth/permissions/","tags":["alpha"],"text":"Permissions Permissions describe the access of a User to the resources of a Model .","title":"Permissions"},{"location":"concepts/auth/permissions/#permissions","text":"Permissions describe the access of a User to the resources of a Model .","title":"Permissions"},{"location":"concepts/auth/realms/","tags":["alpha"],"text":"Realms A Realm allows Organizations to register Users through a combination of email addresses and a password. When a Users registers in dropin.cloud , they are using the drop'in Realm. When a User registers on a Project or an Organization that uses the authentication features of drop'in, he uses the Realm defined by it. An Organization may set up a Realm to restrict Users accounts to a single email address or allow the option of using multiple email addresses.","title":"Realms"},{"location":"concepts/auth/realms/#realms","text":"A Realm allows Organizations to register Users through a combination of email addresses and a password. When a Users registers in dropin.cloud , they are using the drop'in Realm. When a User registers on a Project or an Organization that uses the authentication features of drop'in, he uses the Realm defined by it. An Organization may set up a Realm to restrict Users accounts to a single email address or allow the option of using multiple email addresses.","title":"Realms"},{"location":"concepts/auth/tokens/","tags":["alpha"],"text":"Tokens A Token is a string in JWT format allowing the identification and verification of the access levels of a User or an Organization .","title":"Tokens"},{"location":"concepts/auth/tokens/#tokens","text":"A Token is a string in JWT format allowing the identification and verification of the access levels of a User or an Organization .","title":"Tokens"},{"location":"concepts/automations/","text":"Automations Automations allow the automatic execution of logic.","title":"Automations"},{"location":"concepts/automations/#automations","text":"Automations allow the automatic execution of logic.","title":"Automations"},{"location":"concepts/automations/deployments/","tags":["stable"],"text":"Deployments Deployments allow the execution of a Container . Are described: the environment variables to use the ports to be redirected by a Domain the ports accessible by other Deployments maximum resources to use (memory and processor) the Volumes to use","title":"Deployments"},{"location":"concepts/automations/deployments/#deployments","text":"Deployments allow the execution of a Container . Are described: the environment variables to use the ports to be redirected by a Domain the ports accessible by other Deployments maximum resources to use (memory and processor) the Volumes to use","title":"Deployments"},{"location":"concepts/automations/functions/","tags":["alpha"],"text":"Functions Functions are used to describe behavior in Steps when a Trigger is activated or when executed manually. Steps A Step is a series of actions performed by Functions. The Steps are linked by a system of dependencies allowing to identify their execution order. The actions of a Step are executed successively. Actions request: send a request to a server (HTTP, WS, ...) lookup: browse a data with Manipulators to extract information parse: allows to pass from a text to an object via a Syntax cryptography: generates encryption keys (bcrypt, JWT, UUID, RSA, ...) collection: performs a read or write operation on a Collection function: call another Function with its Options connector: communication with an external service (API) via a Connector and its Options database: performs reads or writes with a query email: allows manual sending of messages page: allows to simulate the navigation on a Page","title":"Functions"},{"location":"concepts/automations/functions/#functions","text":"Functions are used to describe behavior in Steps when a Trigger is activated or when executed manually.","title":"Functions"},{"location":"concepts/automations/functions/#steps","text":"A Step is a series of actions performed by Functions. The Steps are linked by a system of dependencies allowing to identify their execution order. The actions of a Step are executed successively.","title":"Steps"},{"location":"concepts/automations/functions/#actions","text":"request: send a request to a server (HTTP, WS, ...) lookup: browse a data with Manipulators to extract information parse: allows to pass from a text to an object via a Syntax cryptography: generates encryption keys (bcrypt, JWT, UUID, RSA, ...) collection: performs a read or write operation on a Collection function: call another Function with its Options connector: communication with an external service (API) via a Connector and its Options database: performs reads or writes with a query email: allows manual sending of messages page: allows to simulate the navigation on a Page","title":"Actions"},{"location":"concepts/automations/migrations/","tags":["beta"],"text":"Migrations Migrations define the operations to perform in case of modification of the Format of Collections . It will be possible to apply a Migration during the update of the Model of a Project .","title":"Migrations"},{"location":"concepts/automations/migrations/#migrations","text":"Migrations define the operations to perform in case of modification of the Format of Collections . It will be possible to apply a Migration during the update of the Model of a Project .","title":"Migrations"},{"location":"concepts/automations/triggers/","tags":["alpha"],"text":"Triggers Triggers allow the execution of Functions based on specific criterias: waiting for a request from a Domain (HTTP, WebSocket) time regularity (CRON)","title":"Triggers"},{"location":"concepts/automations/triggers/#triggers","text":"Triggers allow the execution of Functions based on specific criterias: waiting for a request from a Domain (HTTP, WebSocket) time regularity (CRON)","title":"Triggers"},{"location":"concepts/catalog/","text":"Catalog Get access to the drop'in Catalog from dropin.cloud and discover Models and Projects created by the community. A point system will be implemented to reward the most popular items and the most active contributors. Paid items could also be available in the future, based on a subscription model or a one-time payment. Obviously, only certified organizations will be able to publish that kind of items to avoid any potential pricing abuse.","title":"Catalog"},{"location":"concepts/catalog/#catalog","text":"Get access to the drop'in Catalog from dropin.cloud and discover Models and Projects created by the community. A point system will be implemented to reward the most popular items and the most active contributors. Paid items could also be available in the future, based on a subscription model or a one-time payment. Obviously, only certified organizations will be able to publish that kind of items to avoid any potential pricing abuse.","title":"Catalog"},{"location":"concepts/catalog/models/","tags":["alpha"],"text":"Models A Model is a group of Recipes with a Versioning system. The elements defined in a Model are: an icon and a description the Users authors the Format of its Options the default configuration of the hosts used for the Connectors the stages possible for a Task of the Community Each Version is isolated from the others but it is possible to link Recipes between them. Recipes that can be found in a Model are : for Interfaces : Components Styles Pages Sessions for Storage : Collections Metrics Logs Values for Validations : Types Anomalies Syntaxes for Automation Functions Triggers Migrations Deployments for Authentication : Permissions for Endpoints : Connectors for Editor : Sections Visualizations Forms Maps","title":"Models"},{"location":"concepts/catalog/models/#models","text":"A Model is a group of Recipes with a Versioning system. The elements defined in a Model are: an icon and a description the Users authors the Format of its Options the default configuration of the hosts used for the Connectors the stages possible for a Task of the Community Each Version is isolated from the others but it is possible to link Recipes between them. Recipes that can be found in a Model are : for Interfaces : Components Styles Pages Sessions for Storage : Collections Metrics Logs Values for Validations : Types Anomalies Syntaxes for Automation Functions Triggers Migrations Deployments for Authentication : Permissions for Endpoints : Connectors for Editor : Sections Visualizations Forms Maps","title":"Models"},{"location":"concepts/catalog/projects/","tags":["alpha"],"text":"Projects A Project is the use of a Model : it applies the content of the Recipes of a Model to work. It is therefore possible to have a single Model and several Projects with specific Options for each environment. The elements specified in a Project are: a Model , its Version and its Options the configuration of the hosts used for Connectors platform-specific informations (web, Android, iOS, Linux, Windows, macOS) When updating a Model , it will be possible to manually or automatically migrate the Project to a new version.","title":"Projects"},{"location":"concepts/catalog/projects/#projects","text":"A Project is the use of a Model : it applies the content of the Recipes of a Model to work. It is therefore possible to have a single Model and several Projects with specific Options for each environment. The elements specified in a Project are: a Model , its Version and its Options the configuration of the hosts used for Connectors platform-specific informations (web, Android, iOS, Linux, Windows, macOS) When updating a Model , it will be possible to manually or automatically migrate the Project to a new version.","title":"Projects"},{"location":"concepts/editor/","text":"Editor Editor is a dropin.cloud service that provide a daily management interface for a data structure based on the Recipes of a Model . This is a kind of back-office automatically generated from the specifications you defined in your Project .","title":"Editor"},{"location":"concepts/editor/#editor","text":"Editor is a dropin.cloud service that provide a daily management interface for a data structure based on the Recipes of a Model . This is a kind of back-office automatically generated from the specifications you defined in your Project .","title":"Editor"},{"location":"concepts/editor/forms/","tags":["beta"],"text":"Forms","title":"Forms"},{"location":"concepts/editor/forms/#forms","text":"","title":"Forms"},{"location":"concepts/editor/maps/","tags":["beta"],"text":"Maps","title":"Maps"},{"location":"concepts/editor/maps/#maps","text":"","title":"Maps"},{"location":"concepts/editor/sections/","tags":["alpha"],"text":"Sections","title":"Sections"},{"location":"concepts/editor/sections/#sections","text":"","title":"Sections"},{"location":"concepts/editor/visualizations/","tags":["alpha"],"text":"Visualizations","title":"Visualizations"},{"location":"concepts/editor/visualizations/#visualizations","text":"","title":"Visualizations"},{"location":"concepts/endpoints/","text":"Endpoints Endpoints allow receiving and sending requests from and to external services.","title":"Endpoints"},{"location":"concepts/endpoints/#endpoints","text":"Endpoints allow receiving and sending requests from and to external services.","title":"Endpoints"},{"location":"concepts/endpoints/addresses/","tags":["stable"],"text":"Addresses","title":"Addresses"},{"location":"concepts/endpoints/addresses/#addresses","text":"","title":"Addresses"},{"location":"concepts/endpoints/connectors/","tags":["beta"],"text":"Connectors","title":"Connectors"},{"location":"concepts/endpoints/connectors/#connectors","text":"","title":"Connectors"},{"location":"concepts/endpoints/databases/","tags":["stable"],"text":"Databases","title":"Databases"},{"location":"concepts/endpoints/databases/#databases","text":"","title":"Databases"},{"location":"concepts/endpoints/domains/","tags":["alpha"],"text":"Domains Domains allow you to describe a routing on Pages , Triggers and Deployments . It is possible to manage prefixes and subdomains to organize the structure of your applications. A Project must be provided for each routing.","title":"Domains"},{"location":"concepts/endpoints/domains/#domains","text":"Domains allow you to describe a routing on Pages , Triggers and Deployments . It is possible to manage prefixes and subdomains to organize the structure of your applications. A Project must be provided for each routing.","title":"Domains"},{"location":"concepts/endpoints/providers/","tags":["stable"],"text":"Providers","title":"Providers"},{"location":"concepts/endpoints/providers/#providers","text":"","title":"Providers"},{"location":"concepts/interfaces/","text":"Interfaces Interfaces include all the resources needed to design web, desktop and mobile graphic experiences.","title":"Interfaces"},{"location":"concepts/interfaces/#interfaces","text":"Interfaces include all the resources needed to design web, desktop and mobile graphic experiences.","title":"Interfaces"},{"location":"concepts/interfaces/components/","tags":["alpha"],"text":"Components Components allow you to create a graphical interface made up of reusable and nestable elements. The entire content of a Component is defined by Blocks that are divided into two categories: Static Blocks and Dynamic Blocks. Each Block has Options that allow you to define its behavior. For example, it is possible to define the triggering of a Function when a Block is pressed, or as a condition to determine whether a Block should be displayed or not. Blocks can also be linked to Styles that allow you to define their appearance. Applying a Style can be conditioned by a condition executed by a Function . Static Blocks Zone: allows grouping Blocks Text: displays text potentially in multiple languages Image: displays an image contained in a Volume or from an external URL Link: link to a Page or an external URL Button: triggers an action when pressed Input: user input Checkbox: allows you to define a binary state Video: displays a video contained in a Volume or from an external URL Divider: dynamically separates two Blocks horizontally or vertically Draggable: allows you to move this Block to a Droppable Block Droppable: groups Draggable Blocks Dynamic Blocks Component: allows you to call another Component Recipe Reference: allows you to display the value of an Option of another Block Iteration: allows you to display as many Blocks as there are elements returned by a Function","title":"Components"},{"location":"concepts/interfaces/components/#components","text":"Components allow you to create a graphical interface made up of reusable and nestable elements. The entire content of a Component is defined by Blocks that are divided into two categories: Static Blocks and Dynamic Blocks. Each Block has Options that allow you to define its behavior. For example, it is possible to define the triggering of a Function when a Block is pressed, or as a condition to determine whether a Block should be displayed or not. Blocks can also be linked to Styles that allow you to define their appearance. Applying a Style can be conditioned by a condition executed by a Function .","title":"Components"},{"location":"concepts/interfaces/components/#static-blocks","text":"Zone: allows grouping Blocks Text: displays text potentially in multiple languages Image: displays an image contained in a Volume or from an external URL Link: link to a Page or an external URL Button: triggers an action when pressed Input: user input Checkbox: allows you to define a binary state Video: displays a video contained in a Volume or from an external URL Divider: dynamically separates two Blocks horizontally or vertically Draggable: allows you to move this Block to a Droppable Block Droppable: groups Draggable Blocks","title":"Static Blocks"},{"location":"concepts/interfaces/components/#dynamic-blocks","text":"Component: allows you to call another Component Recipe Reference: allows you to display the value of an Option of another Block Iteration: allows you to display as many Blocks as there are elements returned by a Function","title":"Dynamic Blocks"},{"location":"concepts/interfaces/pages/","tags":["alpha"],"text":"Pages Pages allow you to define a Component to be used to enable mobile, desktop or web browsing through a Domain . The configuration of the Pages depends on the platform on which it will appear: web: path with possible parameters ({id}) mobile and desktop: application id and deep linking URLs","title":"Pages"},{"location":"concepts/interfaces/pages/#pages","text":"Pages allow you to define a Component to be used to enable mobile, desktop or web browsing through a Domain . The configuration of the Pages depends on the platform on which it will appear: web: path with possible parameters ({id}) mobile and desktop: application id and deep linking URLs","title":"Pages"},{"location":"concepts/interfaces/sessions/","tags":["alpha"],"text":"Sessions Sessions allow communication with the local storage system when displaying a Page . On each platform, different systems can be defined as for example on the web where you can specifically use cookies or IndexedDB.","title":"Sessions"},{"location":"concepts/interfaces/sessions/#sessions","text":"Sessions allow communication with the local storage system when displaying a Page . On each platform, different systems can be defined as for example on the web where you can specifically use cookies or IndexedDB.","title":"Sessions"},{"location":"concepts/interfaces/styles/","tags":["alpha"],"text":"Styles Styles allow you to apply display rules for the Blocks of a Component . There are several categories of Styles: Dimensions: size of a Block Position: positioning of a Block Margins: spacing between a Block and its neighbors Gutters: spacing inside a Block Background: background style of a Block Borders: border style of a Block Shadows: shadow of a Block Text: related to the Text Block Zone: related to the Zone Block Input: related to the Input Block A Style is decomposed into several Classes that all have a unique name. Each Class can be applied to any Block. It is possible to create conditional Classes in order to apply Styles depending on conditions based on: - the platform (web, Android, iOS, linux, windows, macOS) - the dimensions (height and width) - the state (hover, focus, print) Finally, it is possible to create animations in order to use styles frames on a Block with a defined duration and frequency.","title":"Styles"},{"location":"concepts/interfaces/styles/#styles","text":"Styles allow you to apply display rules for the Blocks of a Component . There are several categories of Styles: Dimensions: size of a Block Position: positioning of a Block Margins: spacing between a Block and its neighbors Gutters: spacing inside a Block Background: background style of a Block Borders: border style of a Block Shadows: shadow of a Block Text: related to the Text Block Zone: related to the Zone Block Input: related to the Input Block A Style is decomposed into several Classes that all have a unique name. Each Class can be applied to any Block. It is possible to create conditional Classes in order to apply Styles depending on conditions based on: - the platform (web, Android, iOS, linux, windows, macOS) - the dimensions (height and width) - the state (hover, focus, print) Finally, it is possible to create animations in order to use styles frames on a Block with a defined duration and frequency.","title":"Styles"},{"location":"concepts/interfaces/themes/","tags":["alpha"],"text":"Themes Themes allow you to define a graphic charter with colors, sizes, fonts and global Styles .","title":"Themes"},{"location":"concepts/interfaces/themes/#themes","text":"Themes allow you to define a graphic charter with colors, sizes, fonts and global Styles .","title":"Themes"},{"location":"concepts/owners/","text":"Owners Owners can: access a Project which is based on a Model edit Recipes from a Model Recipes that can be found at the Owner level are: for the Catalog : Models Projects for Interfaces : Themes for Storage : Volumes Repositories Containers for Authentication : Realms Groups for Endpoints : Domains Addresses Providers Databases","title":"Owners"},{"location":"concepts/owners/#owners","text":"Owners can: access a Project which is based on a Model edit Recipes from a Model Recipes that can be found at the Owner level are: for the Catalog : Models Projects for Interfaces : Themes for Storage : Volumes Repositories Containers for Authentication : Realms Groups for Endpoints : Domains Addresses Providers Databases","title":"Owners"},{"location":"concepts/owners/organizations/","tags":["beta"],"text":"Organizations Organizations are created and owned by Users . Unlike Users , Organizations do not have the ability to authenticate on drop'in interfaces. As a result, all exchanges via API must use manually generated Tokens . Another difference with Users is that an Organization can create Realms to allow the registration of Users, and Payments to make bank transactions. Payments allow you to use the credit card of a User via Components in the context of a Project .","title":"Organizations"},{"location":"concepts/owners/organizations/#organizations","text":"Organizations are created and owned by Users . Unlike Users , Organizations do not have the ability to authenticate on drop'in interfaces. As a result, all exchanges via API must use manually generated Tokens . Another difference with Users is that an Organization can create Realms to allow the registration of Users, and Payments to make bank transactions. Payments allow you to use the credit card of a User via Components in the context of a Project .","title":"Organizations"},{"location":"concepts/owners/users/","tags":["alpha"],"text":"Users A User is an individual registered with one or more Realms . He or she must have at least one email address and a password. Each User has account data (personal information, preferences, passwords). Realms being isolated, this data is specific to each Realm of registration. Only email addresses can be shared. Users cannot use Realms or Payments without going through an Organization .","title":"Users"},{"location":"concepts/owners/users/#users","text":"A User is an individual registered with one or more Realms . He or she must have at least one email address and a password. Each User has account data (personal information, preferences, passwords). Realms being isolated, this data is specific to each Realm of registration. Only email addresses can be shared. Users cannot use Realms or Payments without going through an Organization .","title":"Users"},{"location":"concepts/recipes/","text":"Recipes A Recipe is the description of an entity, a state or a behavior. There are two types of Recipes: those directly linked to an Owner such as Groups , Volumes , or Domains those found in a Model such as Components , Functions , or Collections Only Recipes from Models can be used to create Projects or be shared with other users via the Catalog . Categories Catalog : management of Models and Projects Owners : management of Users and Organizations Interfaces : creating graphical experiences Storage : persistence of formatted data Automations : automated actions Validations : verification of data conformity Auth : management of Users accesses Endpoints : connection to external services Editor : Projects administration Header data name description terms, to define the name of the Recipe to qualify a single entity and for several entities labels, words allowing to create filters to select a set of Recipes","title":"Recipes"},{"location":"concepts/recipes/#recipes","text":"A Recipe is the description of an entity, a state or a behavior. There are two types of Recipes: those directly linked to an Owner such as Groups , Volumes , or Domains those found in a Model such as Components , Functions , or Collections Only Recipes from Models can be used to create Projects or be shared with other users via the Catalog .","title":"Recipes"},{"location":"concepts/recipes/#categories","text":"Catalog : management of Models and Projects Owners : management of Users and Organizations Interfaces : creating graphical experiences Storage : persistence of formatted data Automations : automated actions Validations : verification of data conformity Auth : management of Users accesses Endpoints : connection to external services Editor : Projects administration","title":"Categories"},{"location":"concepts/recipes/#header-data","text":"name description terms, to define the name of the Recipe to qualify a single entity and for several entities labels, words allowing to create filters to select a set of Recipes","title":"Header data"},{"location":"concepts/recipes/formats/","text":"Formats Formats are data structure definitions and can be composed of: Unique native types composed of other Formats Custom types created by Owners containing other Formats Formats are for example used: in Options of Recipes in Variations of Types in Fields of Collections in Setter \"Format comparison\" A Format of native object type can contain the information of all required fields as well as default values to be used. When using a Format, it is possible to place Constraints on the manipulated data by giving a validity condition and an Issue . If the condition is not met, the Issue is triggered and returns custom errors. Formats can also contain Labels to apply dynamic selections with for example the \"search\" step in a Function . Native types Unique Audio Options: Volume to use, list of accepted extension, min and max size, min and max duration Format: File Item Binary Options: min and max size Format: binary Boolean Display: edit date Variations: basic: boolean task: object with one boolean and two dates Choice Options: min and max choices, possibilities with their description Format: list of choices Color Variations: Hexadecimal: object with text and opacity RGBA: object with texts (red, green, blue and opacity) HSLA: object with texts Date Options: min and max Format: timestamp Display : units (seconds, minutes, hours, days, months, years) Duration Options: min and max Format: duration Display: units (seconds, minutes, hours, days, months, years) E-mail Options: domain name to use, Regular expression on name Format: text File Options: Volume to use, accepted extension tables, min and max size Format: File Item Image Options: Volume to use, supported extension tables, min and max size, min and max dimensions Format: File Item Item Options: Collection with its Options Format: Item of Item Location Options: country included Format: object Display: map, fields (name, number, street, region, city, country, postal code and GPS coordinates) Measure Options: decimals, min and max, conversion table Display: unit Format: object with quantity and unit Period Options: min and max dates Format: object with two dates Telephone Options: list of accepted country prefixes Display: grouping of numbers, separator Format: object with prefix and text with number Price Options: min and max, list of accepted currencies Display: currency Format: measure with currency Quantity Options: decimal, min and max Format: quantity Recurrence Format: period and interval (seconds, minutes, hours, days, months, years) Text Options: min size, max size, Regular expression Variations: text by number: name for one, name for many, article if applicable by language: for each language, a text or by number URL Format: text Video Options: Volume to use, accepted extension tables, min and max size, min and max dimensions Format: File Item Compounds Index Dynamic keys and common formats Options: list of possible keys List Ordered set of the same Format Options: min and max size Object Fixed keys and individual Formats Options: object with required fields and default values","title":"Formats"},{"location":"concepts/recipes/formats/#formats","text":"Formats are data structure definitions and can be composed of: Unique native types composed of other Formats Custom types created by Owners containing other Formats Formats are for example used: in Options of Recipes in Variations of Types in Fields of Collections in Setter \"Format comparison\" A Format of native object type can contain the information of all required fields as well as default values to be used. When using a Format, it is possible to place Constraints on the manipulated data by giving a validity condition and an Issue . If the condition is not met, the Issue is triggered and returns custom errors. Formats can also contain Labels to apply dynamic selections with for example the \"search\" step in a Function .","title":"Formats"},{"location":"concepts/recipes/formats/#native-types","text":"","title":"Native types"},{"location":"concepts/recipes/formats/#unique","text":"","title":"Unique"},{"location":"concepts/recipes/formats/#audio","text":"Options: Volume to use, list of accepted extension, min and max size, min and max duration Format: File Item","title":"Audio"},{"location":"concepts/recipes/formats/#binary","text":"Options: min and max size Format: binary","title":"Binary"},{"location":"concepts/recipes/formats/#boolean","text":"Display: edit date Variations: basic: boolean task: object with one boolean and two dates","title":"Boolean"},{"location":"concepts/recipes/formats/#choice","text":"Options: min and max choices, possibilities with their description Format: list of choices","title":"Choice"},{"location":"concepts/recipes/formats/#color","text":"Variations: Hexadecimal: object with text and opacity RGBA: object with texts (red, green, blue and opacity) HSLA: object with texts","title":"Color"},{"location":"concepts/recipes/formats/#date","text":"Options: min and max Format: timestamp Display : units (seconds, minutes, hours, days, months, years)","title":"Date"},{"location":"concepts/recipes/formats/#duration","text":"Options: min and max Format: duration Display: units (seconds, minutes, hours, days, months, years)","title":"Duration"},{"location":"concepts/recipes/formats/#e-mail","text":"Options: domain name to use, Regular expression on name Format: text","title":"E-mail"},{"location":"concepts/recipes/formats/#file","text":"Options: Volume to use, accepted extension tables, min and max size Format: File Item","title":"File"},{"location":"concepts/recipes/formats/#image","text":"Options: Volume to use, supported extension tables, min and max size, min and max dimensions Format: File Item","title":"Image"},{"location":"concepts/recipes/formats/#item","text":"Options: Collection with its Options Format: Item of Item","title":"Item"},{"location":"concepts/recipes/formats/#location","text":"Options: country included Format: object Display: map, fields (name, number, street, region, city, country, postal code and GPS coordinates)","title":"Location"},{"location":"concepts/recipes/formats/#measure","text":"Options: decimals, min and max, conversion table Display: unit Format: object with quantity and unit","title":"Measure"},{"location":"concepts/recipes/formats/#period","text":"Options: min and max dates Format: object with two dates","title":"Period"},{"location":"concepts/recipes/formats/#telephone","text":"Options: list of accepted country prefixes Display: grouping of numbers, separator Format: object with prefix and text with number","title":"Telephone"},{"location":"concepts/recipes/formats/#price","text":"Options: min and max, list of accepted currencies Display: currency Format: measure with currency","title":"Price"},{"location":"concepts/recipes/formats/#quantity","text":"Options: decimal, min and max Format: quantity","title":"Quantity"},{"location":"concepts/recipes/formats/#recurrence","text":"Format: period and interval (seconds, minutes, hours, days, months, years)","title":"Recurrence"},{"location":"concepts/recipes/formats/#text","text":"Options: min size, max size, Regular expression Variations: text by number: name for one, name for many, article if applicable by language: for each language, a text or by number","title":"Text"},{"location":"concepts/recipes/formats/#url","text":"Format: text","title":"URL"},{"location":"concepts/recipes/formats/#video","text":"Options: Volume to use, accepted extension tables, min and max size, min and max dimensions Format: File Item","title":"Video"},{"location":"concepts/recipes/formats/#compounds","text":"","title":"Compounds"},{"location":"concepts/recipes/formats/#index","text":"Dynamic keys and common formats Options: list of possible keys","title":"Index"},{"location":"concepts/recipes/formats/#list","text":"Ordered set of the same Format Options: min and max size","title":"List"},{"location":"concepts/recipes/formats/#object","text":"Fixed keys and individual Formats Options: object with required fields and default values","title":"Object"},{"location":"concepts/recipes/getters/","text":"Getters A Getter allows to access information dynamically. There are two types of access: local, it is information at the level of a Recipe external, it is information loaded from another Recipe or a Collection Item In a text, it is possible to use a Getter to make a text dynamic.","title":"Getters"},{"location":"concepts/recipes/getters/#getters","text":"A Getter allows to access information dynamically. There are two types of access: local, it is information at the level of a Recipe external, it is information loaded from another Recipe or a Collection Item In a text, it is possible to use a Getter to make a text dynamic.","title":"Getters"},{"location":"concepts/recipes/options/","text":"Options Options allow Recipes to use custom parameters when they run. In each Recipe , the expected Options are defined by a Format making them usable in the Recipe through a Getter .","title":"Options"},{"location":"concepts/recipes/options/#options","text":"Options allow Recipes to use custom parameters when they run. In each Recipe , the expected Options are defined by a Format making them usable in the Recipe through a Getter .","title":"Options"},{"location":"concepts/recipes/setters/","text":"Setters Setters are used to determine and transform data. In the different Setters below, the values used are: either raw data or from a Getter In a text, it is possible to use a Setter to make a text dynamic. Operations Arithmetic addition: list of quantities subtraction: list of quantities multiplication: list of quantities division: list of quantities power: quantity square root: quantity exponential: quantity logarithm: quantity modulo: two quantities Logic exists: value and: list of booleans or: list of booleans no: boolean Comparisons less than (<): two quantities at most (<=): two quantities at least ()>=): two quantities more than (>): two quantities equal to: two quantities different from: two quantities different from all: one value, a list of values different from one: one value, a list of values same to all: one value, a list of values same to one: a value, a list of values Formats Common length: size in characters of a value or elements of a list instance of: value to check, Format to use Texts concatenate: values, separator text (\" \") split: value, separator text match: text to search, regular expression replace: text to search, text to replace, replacement text translate: value, language, number, item to use lowercase: text upper case: text capitalize first letters of each word (titleCase): text truncate leading and trailing spaces (trim): text, characters ([\"\"]), right (true), left (true) abbreviate (summarize): text, maximum, end text (\"...\") transform a text with a Syntax (encode): text, Syntax and its Options pick: select a part of the text to cut with the beginning and the end Quantities average: list of quantities rounding: quantity, number of decimals (2), type of rounding (nearest, lower or higher) Dates duration between two dates: start, end, return unit (\"s\") day of the week of a date: date extraction (day, week, month, year, hours, ...): date add a period to a date: date, period (days, months, years, ...) Lists maximum quantity in a list: list of quantities minimum quantity in a list: list of quantities merge several lists: list of lists select elements (pick): list of values, start index, end index Values random number: minimum quantity (0), maximum quantity (1), number of decimals (2) pi: number of decimals (15) current date: return variation (\"timestamp\")","title":"Setters"},{"location":"concepts/recipes/setters/#setters","text":"Setters are used to determine and transform data. In the different Setters below, the values used are: either raw data or from a Getter In a text, it is possible to use a Setter to make a text dynamic.","title":"Setters"},{"location":"concepts/recipes/setters/#operations","text":"","title":"Operations"},{"location":"concepts/recipes/setters/#arithmetic","text":"addition: list of quantities subtraction: list of quantities multiplication: list of quantities division: list of quantities power: quantity square root: quantity exponential: quantity logarithm: quantity modulo: two quantities","title":"Arithmetic"},{"location":"concepts/recipes/setters/#logic","text":"exists: value and: list of booleans or: list of booleans no: boolean","title":"Logic"},{"location":"concepts/recipes/setters/#comparisons","text":"less than (<): two quantities at most (<=): two quantities at least ()>=): two quantities more than (>): two quantities equal to: two quantities different from: two quantities different from all: one value, a list of values different from one: one value, a list of values same to all: one value, a list of values same to one: a value, a list of values","title":"Comparisons"},{"location":"concepts/recipes/setters/#formats","text":"","title":"Formats"},{"location":"concepts/recipes/setters/#common","text":"length: size in characters of a value or elements of a list instance of: value to check, Format to use","title":"Common"},{"location":"concepts/recipes/setters/#texts","text":"concatenate: values, separator text (\" \") split: value, separator text match: text to search, regular expression replace: text to search, text to replace, replacement text translate: value, language, number, item to use lowercase: text upper case: text capitalize first letters of each word (titleCase): text truncate leading and trailing spaces (trim): text, characters ([\"\"]), right (true), left (true) abbreviate (summarize): text, maximum, end text (\"...\") transform a text with a Syntax (encode): text, Syntax and its Options pick: select a part of the text to cut with the beginning and the end","title":"Texts"},{"location":"concepts/recipes/setters/#quantities","text":"average: list of quantities rounding: quantity, number of decimals (2), type of rounding (nearest, lower or higher)","title":"Quantities"},{"location":"concepts/recipes/setters/#dates","text":"duration between two dates: start, end, return unit (\"s\") day of the week of a date: date extraction (day, week, month, year, hours, ...): date add a period to a date: date, period (days, months, years, ...)","title":"Dates"},{"location":"concepts/recipes/setters/#lists","text":"maximum quantity in a list: list of quantities minimum quantity in a list: list of quantities merge several lists: list of lists select elements (pick): list of values, start index, end index","title":"Lists"},{"location":"concepts/recipes/setters/#values","text":"random number: minimum quantity (0), maximum quantity (1), number of decimals (2) pi: number of decimals (15) current date: return variation (\"timestamp\")","title":"Values"},{"location":"concepts/storage/","text":"Storage Storage allows the storage of data in different textual and binary forms.","title":"Storage"},{"location":"concepts/storage/#storage","text":"Storage allows the storage of data in different textual and binary forms.","title":"Storage"},{"location":"concepts/storage/collections/","tags":["alpha"],"text":"Collections A Collection allows the storage of data described with Fields. Fields are defined by a Format . A Collection contains Items.","title":"Collections"},{"location":"concepts/storage/collections/#collections","text":"A Collection allows the storage of data described with Fields. Fields are defined by a Format . A Collection contains Items.","title":"Collections"},{"location":"concepts/storage/containers/","tags":["stable"],"text":"Containers Containers describe how an image works for use in a Deployment . Are described: the necessary operating procedures the available environment variables the directories requiring persistence the available ports recommended memory and processor resources","title":"Containers"},{"location":"concepts/storage/containers/#containers","text":"Containers describe how an image works for use in a Deployment . Are described: the necessary operating procedures the available environment variables the directories requiring persistence the available ports recommended memory and processor resources","title":"Containers"},{"location":"concepts/storage/logs/","tags":["alpha"],"text":"Logs Logs allows to store output streams of programs in order to keep traces of their execution. They can for example be used with a Deployment to keep its logs.","title":"Logs"},{"location":"concepts/storage/logs/#logs","text":"Logs allows to store output streams of programs in order to keep traces of their execution. They can for example be used with a Deployment to keep its logs.","title":"Logs"},{"location":"concepts/storage/metrics/","tags":["alpha"],"text":"Metrics Metrics are numbers stored over time to generate chronological statistics.","title":"Metrics"},{"location":"concepts/storage/metrics/#metrics","text":"Metrics are numbers stored over time to generate chronological statistics.","title":"Metrics"},{"location":"concepts/storage/repositories/","tags":["stable"],"text":"Repositories Repositories allow you to store source code with Git versioning.","title":"Repositories"},{"location":"concepts/storage/repositories/#repositories","text":"Repositories allow you to store source code with Git versioning.","title":"Repositories"},{"location":"concepts/storage/values/","tags":["beta"],"text":"Values Values are raw data stored in Recipes that correspond to a specific Format .","title":"Values"},{"location":"concepts/storage/values/#values","text":"Values are raw data stored in Recipes that correspond to a specific Format .","title":"Values"},{"location":"concepts/storage/volumes/","tags":["alpha"],"text":"Volumes Volumes allow the storage of static files (images, videos...) at the level of an Owner , it will then be possible to use its Files in Recipes . To create a Volume, you must indicate an amount in Gigabytes (Go) to reserve. The backups of Volumes is configurable to increase or decrease its regularity.","title":"Volumes"},{"location":"concepts/storage/volumes/#volumes","text":"Volumes allow the storage of static files (images, videos...) at the level of an Owner , it will then be possible to use its Files in Recipes . To create a Volume, you must indicate an amount in Gigabytes (Go) to reserve. The backups of Volumes is configurable to increase or decrease its regularity.","title":"Volumes"},{"location":"concepts/validations/","text":"Validations Validations allow the verification of data.","title":"Validations"},{"location":"concepts/validations/#validations","text":"Validations allow the verification of data.","title":"Validations"},{"location":"concepts/validations/issues/","tags":["alpha"],"text":"Issues","title":"Issues"},{"location":"concepts/validations/issues/#issues","text":"","title":"Issues"},{"location":"concepts/validations/syntaxes/","tags":["beta"],"text":"Syntaxes","title":"Syntaxes"},{"location":"concepts/validations/syntaxes/#syntaxes","text":"","title":"Syntaxes"},{"location":"concepts/validations/types/","tags":["alpha"],"text":"Types","title":"Types"},{"location":"concepts/validations/types/#types","text":"","title":"Types"},{"location":"fr/","text":"Introduction drop'in est une technologie permettant de cr\u00e9er des applications multi-plateformes (web, Android et iOS) bas\u00e9es sur un code unique \u00e9crit dans des fichiers appel\u00e9s recettes . Tous les aspects de votre projet sont d\u00e9finis dans des recettes, qu'il s'agisse de l'interface graphique, de la logique m\u00e9tier ou de la gestion des donn\u00e9es, vous n'avez donc pas besoin de conna\u00eetre de langage de programmation pour cr\u00e9er votre application. Blue Forest , une entreprise fran\u00e7aise bas\u00e9e \u00e0 Marseille, d\u00e9veloppe actuellement cette technologie et utilise drop'in pour cr\u00e9er des applications pour ses clients. Apr\u00e8s de longues ann\u00e9es de recherche et de d\u00e9veloppement, nous pensons que cette technologie peut \u00eatre utile \u00e0 un plus grand nombre d'entreprises et d'individus, et nous avons donc d\u00e9cid\u00e9 de la rendre accessible \u00e0 tous. Nous avons publi\u00e9 cette documentation pour pr\u00e9senter les concepts de base de drop'in et pour vous aider \u00e0 comprendre comment vous pouvez l'utiliser pour cr\u00e9er vos propres applications. A l'heure actuelle nous travaillons sur une version de drop'in gratuite \u00e0 acc\u00e8s restreint qui sera bient\u00f4t disponible sous l'appellation alpha . Nous vous invitons \u00e0 remplir ce formulaire si vous souhaitez participer \u00e0 cette phase de test. Nous publierons \u00e9galement des informations sur cette documentation au fur et \u00e0 mesure de l'avancement de notre travail. Lorsque la p\u00e9riode d'alpha sera termin\u00e9e, nous publierons une version beta qui sera accessible \u00e0 tous, puis enfin une version stable qui sera la version finale de drop'in. drop'in est une technologie open-source dont le compilateur sera publi\u00e9 sous licence AGPL, et nous mettrons \u00e9galement \u00e0 disposition des outils payants pour faciliter la cr\u00e9ation collaborative de vos applications ainsi que leur publication avec l'automatisation des t\u00e2ches de d\u00e9ploiement et de mise \u00e0 jour. Toutes ses fonctionnalit\u00e9s sont d\u00e9crites dans la section dropin.cloud de cette documentation , vous pourrez donc facilement identifier les fonctionnalit\u00e9s qui seront gratuites et celles qui seront payantes. Si vous avez la moindre question, n'h\u00e9sitez pas \u00e0 nous contacter par e-mail \u00e0 l'adresse dropin@blueforest.cc ou sur GitHub dans la section Discussions de notre d\u00e9p\u00f4t . Internationalisation Cette documentation est \u00e9galement disponible en anglais . Vous pouvez changer la langue actuelle \u00e0 tout moment en cliquant sur l'ic\u00f4ne de la langue en haut \u00e0 droite de la page, a c\u00f4t\u00e9 de la barre de recherche. Par ailleurs, si vous souhaitez contribuer \u00e0 la traduction de cette documentation, vous pouvez le faire en cr\u00e9ant une Pull Request sur GitHub . Licence Le contenu de ce d\u00e9p\u00f4t est sous licence CC BY-NC-SA 4.0 , vous pouvez le redistribuer et/ou le modifier selon les termes de la licence. Concernant le code source, il est sous licence MIT .","title":"Introduction"},{"location":"fr/#introduction","text":"drop'in est une technologie permettant de cr\u00e9er des applications multi-plateformes (web, Android et iOS) bas\u00e9es sur un code unique \u00e9crit dans des fichiers appel\u00e9s recettes . Tous les aspects de votre projet sont d\u00e9finis dans des recettes, qu'il s'agisse de l'interface graphique, de la logique m\u00e9tier ou de la gestion des donn\u00e9es, vous n'avez donc pas besoin de conna\u00eetre de langage de programmation pour cr\u00e9er votre application. Blue Forest , une entreprise fran\u00e7aise bas\u00e9e \u00e0 Marseille, d\u00e9veloppe actuellement cette technologie et utilise drop'in pour cr\u00e9er des applications pour ses clients. Apr\u00e8s de longues ann\u00e9es de recherche et de d\u00e9veloppement, nous pensons que cette technologie peut \u00eatre utile \u00e0 un plus grand nombre d'entreprises et d'individus, et nous avons donc d\u00e9cid\u00e9 de la rendre accessible \u00e0 tous. Nous avons publi\u00e9 cette documentation pour pr\u00e9senter les concepts de base de drop'in et pour vous aider \u00e0 comprendre comment vous pouvez l'utiliser pour cr\u00e9er vos propres applications. A l'heure actuelle nous travaillons sur une version de drop'in gratuite \u00e0 acc\u00e8s restreint qui sera bient\u00f4t disponible sous l'appellation alpha . Nous vous invitons \u00e0 remplir ce formulaire si vous souhaitez participer \u00e0 cette phase de test. Nous publierons \u00e9galement des informations sur cette documentation au fur et \u00e0 mesure de l'avancement de notre travail. Lorsque la p\u00e9riode d'alpha sera termin\u00e9e, nous publierons une version beta qui sera accessible \u00e0 tous, puis enfin une version stable qui sera la version finale de drop'in. drop'in est une technologie open-source dont le compilateur sera publi\u00e9 sous licence AGPL, et nous mettrons \u00e9galement \u00e0 disposition des outils payants pour faciliter la cr\u00e9ation collaborative de vos applications ainsi que leur publication avec l'automatisation des t\u00e2ches de d\u00e9ploiement et de mise \u00e0 jour. Toutes ses fonctionnalit\u00e9s sont d\u00e9crites dans la section dropin.cloud de cette documentation , vous pourrez donc facilement identifier les fonctionnalit\u00e9s qui seront gratuites et celles qui seront payantes. Si vous avez la moindre question, n'h\u00e9sitez pas \u00e0 nous contacter par e-mail \u00e0 l'adresse dropin@blueforest.cc ou sur GitHub dans la section Discussions de notre d\u00e9p\u00f4t .","title":"Introduction"},{"location":"fr/#internationalisation","text":"Cette documentation est \u00e9galement disponible en anglais . Vous pouvez changer la langue actuelle \u00e0 tout moment en cliquant sur l'ic\u00f4ne de la langue en haut \u00e0 droite de la page, a c\u00f4t\u00e9 de la barre de recherche. Par ailleurs, si vous souhaitez contribuer \u00e0 la traduction de cette documentation, vous pouvez le faire en cr\u00e9ant une Pull Request sur GitHub .","title":"Internationalisation"},{"location":"fr/#licence","text":"Le contenu de ce d\u00e9p\u00f4t est sous licence CC BY-NC-SA 4.0 , vous pouvez le redistribuer et/ou le modifier selon les termes de la licence. Concernant le code source, il est sous licence MIT .","title":"Licence"},{"location":"fr/cloud/","text":"dropin.cloud dropin.cloud est un service cloud propos\u00e9 par Blue Forest afin de vous aider \u00e0 cr\u00e9er et g\u00e9rer vos applications bas\u00e9es sur la technologie drop'in. Actuellement en phase alpha, il n'est pas encore accessible \u00e0 tous. Si vous souhaitez participer \u00e0 cette phase de test, vous pouvez remplir ce formulaire mais gardez \u00e0 l'esprit que les acc\u00e8s ne seront pas lanc\u00e9s tant que nous n'aurons pas finalis\u00e9 toutes les pr\u00e9parations n\u00e9cessaires. L'\u00e9cosyst\u00e8me de dropin.cloud sera compos\u00e9 de quatre principaux services : Studio : cr\u00e9ez vos applications bas\u00e9es sur des Mod\u00e8les \u00c9diteur : g\u00e9rez votre structure de donn\u00e9es au quotidien Catalogue : une marketplace de Mod\u00e8les et de Projets drop'in Communaut\u00e9 : un lieu pour partager vos cr\u00e9ations et trouver de l'inspiration Studio Studio permet de d\u00e9crire un fonctionnement logique et visuel sous la forme de Mod\u00e8les . Pour tous les concepts des Interfaces , Studio vous permettra de visualiser en temps r\u00e9el les changements que vous apportez \u00e0 votre application. Via un \u00e9diteur interactif, vous pourrez tr\u00e8s facilement g\u00e9rer par exemple vos Composants et vos Styles . Pour des concepts plus algorithmiques, Studio vous permettra de d\u00e9crire votre application sous la forme de blocs interactifs et de les assembler pour d\u00e9finir par exemple vos Fonctions . Pour chaque concept d'un Mod\u00e8le , Studio vous permettra de d\u00e9crire votre application sans avoir \u00e0 \u00e9crire une seule ligne de code. Si cependant vous souhaitez aller plus loin, vous pourrez toujours \u00e9diter le code source de votre application directement depuis Studio. Communaut\u00e9 Voici quelques fonctionnalit\u00e9s que nous avons pr\u00e9vus pour ce service : Publications : fil d'activit\u00e9 connect\u00e9 au Fediverse avec ActivityPub Messages : messages priv\u00e9s entre utilisateurs chiffr\u00e9s de bout en bout Manuels : r\u00e9digez et partagez vos documentations en priv\u00e9 ou en public Traductions : outil pour traduire facilement vos contenus T\u00e2ches : g\u00e9rez vos projets avec des t\u00e2ches et des sous-t\u00e2ches","title":"dropin.cloud"},{"location":"fr/cloud/#dropincloud","text":"dropin.cloud est un service cloud propos\u00e9 par Blue Forest afin de vous aider \u00e0 cr\u00e9er et g\u00e9rer vos applications bas\u00e9es sur la technologie drop'in. Actuellement en phase alpha, il n'est pas encore accessible \u00e0 tous. Si vous souhaitez participer \u00e0 cette phase de test, vous pouvez remplir ce formulaire mais gardez \u00e0 l'esprit que les acc\u00e8s ne seront pas lanc\u00e9s tant que nous n'aurons pas finalis\u00e9 toutes les pr\u00e9parations n\u00e9cessaires. L'\u00e9cosyst\u00e8me de dropin.cloud sera compos\u00e9 de quatre principaux services : Studio : cr\u00e9ez vos applications bas\u00e9es sur des Mod\u00e8les \u00c9diteur : g\u00e9rez votre structure de donn\u00e9es au quotidien Catalogue : une marketplace de Mod\u00e8les et de Projets drop'in Communaut\u00e9 : un lieu pour partager vos cr\u00e9ations et trouver de l'inspiration","title":"dropin.cloud"},{"location":"fr/cloud/#studio","text":"Studio permet de d\u00e9crire un fonctionnement logique et visuel sous la forme de Mod\u00e8les . Pour tous les concepts des Interfaces , Studio vous permettra de visualiser en temps r\u00e9el les changements que vous apportez \u00e0 votre application. Via un \u00e9diteur interactif, vous pourrez tr\u00e8s facilement g\u00e9rer par exemple vos Composants et vos Styles . Pour des concepts plus algorithmiques, Studio vous permettra de d\u00e9crire votre application sous la forme de blocs interactifs et de les assembler pour d\u00e9finir par exemple vos Fonctions . Pour chaque concept d'un Mod\u00e8le , Studio vous permettra de d\u00e9crire votre application sans avoir \u00e0 \u00e9crire une seule ligne de code. Si cependant vous souhaitez aller plus loin, vous pourrez toujours \u00e9diter le code source de votre application directement depuis Studio.","title":"Studio"},{"location":"fr/cloud/#communaute","text":"Voici quelques fonctionnalit\u00e9s que nous avons pr\u00e9vus pour ce service : Publications : fil d'activit\u00e9 connect\u00e9 au Fediverse avec ActivityPub Messages : messages priv\u00e9s entre utilisateurs chiffr\u00e9s de bout en bout Manuels : r\u00e9digez et partagez vos documentations en priv\u00e9 ou en public Traductions : outil pour traduire facilement vos contenus T\u00e2ches : g\u00e9rez vos projets avec des t\u00e2ches et des sous-t\u00e2ches","title":"Communaut\u00e9"},{"location":"fr/roadmap/","text":"Feuille de route Le d\u00e9veloppement de drop'in a \u00e9t\u00e9 divis\u00e9 en saisons et \u00e9pisodes : nous sommes pass\u00e9s de version en version depuis 2016 et nous sommes actuellement \u00e0 l'\u00e9pisode 2 de la saison 6. Au cours de parcours, nous avons parcourus plusieurs stacks techniques avec une multitude d'exp\u00e9rimentations qui nous ont permis de progressivement \u00e9tablir un ensemble de fonctionnalit\u00e9s et de d\u00e9finir des concepts cl\u00e9s. Durant les saisons pr\u00e9c\u00e9dentes, drop'in a \u00e9t\u00e9 utilis\u00e9 dans le cadre des services de Blue Forest pour cr\u00e9er des applications multi-plateformes pour ses clients. Aujourd'hui, nous avons finalis\u00e9 les sp\u00e9cifications de drop'in pour le rendre disponible publiquement et permettant \u00e0 n'importe qui de construire ses propres applications en totale autonomie. Cette documentation est en cours de r\u00e9daction, nous vous invitons \u00e0 visiter notre d\u00e9p\u00f4t GitHub pour suivre les prochaines mises \u00e0 jour. A partir des prochains \u00e9pisodes, nous publierons plus de d\u00e9tails sur cette page.","title":"Feuille de route"},{"location":"fr/roadmap/#feuille-de-route","text":"Le d\u00e9veloppement de drop'in a \u00e9t\u00e9 divis\u00e9 en saisons et \u00e9pisodes : nous sommes pass\u00e9s de version en version depuis 2016 et nous sommes actuellement \u00e0 l'\u00e9pisode 2 de la saison 6. Au cours de parcours, nous avons parcourus plusieurs stacks techniques avec une multitude d'exp\u00e9rimentations qui nous ont permis de progressivement \u00e9tablir un ensemble de fonctionnalit\u00e9s et de d\u00e9finir des concepts cl\u00e9s. Durant les saisons pr\u00e9c\u00e9dentes, drop'in a \u00e9t\u00e9 utilis\u00e9 dans le cadre des services de Blue Forest pour cr\u00e9er des applications multi-plateformes pour ses clients. Aujourd'hui, nous avons finalis\u00e9 les sp\u00e9cifications de drop'in pour le rendre disponible publiquement et permettant \u00e0 n'importe qui de construire ses propres applications en totale autonomie. Cette documentation est en cours de r\u00e9daction, nous vous invitons \u00e0 visiter notre d\u00e9p\u00f4t GitHub pour suivre les prochaines mises \u00e0 jour. A partir des prochains \u00e9pisodes, nous publierons plus de d\u00e9tails sur cette page.","title":"Feuille de route"},{"location":"fr/concepts/","text":"Concepts Un Concept drop'in est la repr\u00e9sentation d'un ensemble de fonctionnalit\u00e9s qui permettent de d\u00e9crire un besoin sp\u00e9cifique. En d'autres termes, nous avons cr\u00e9\u00e9 un Concept pour chaque aspect dont vous pourriez avoir besoin dans le cadre de la cr\u00e9ation d'une application. Vous trouverez donc dans cette section l'ensemble des Concepts disponibles sur drop'in. Pour chaque Concept, vous trouverez une description de son fonctionnement ainsi que des exemples d'utilisation. Par ailleurs, gr\u00e2ce \u00e0 notre outil Studio vous pourrez d\u00e9crire votre application sans avoir \u00e0 \u00e9crire du code ou \u00e0 conna\u00eetre toutes les sp\u00e9cifications des Recettes car tous les Concepts drop'in sont accessibles via une interface graphique.","title":"Concepts"},{"location":"fr/concepts/#concepts","text":"Un Concept drop'in est la repr\u00e9sentation d'un ensemble de fonctionnalit\u00e9s qui permettent de d\u00e9crire un besoin sp\u00e9cifique. En d'autres termes, nous avons cr\u00e9\u00e9 un Concept pour chaque aspect dont vous pourriez avoir besoin dans le cadre de la cr\u00e9ation d'une application. Vous trouverez donc dans cette section l'ensemble des Concepts disponibles sur drop'in. Pour chaque Concept, vous trouverez une description de son fonctionnement ainsi que des exemples d'utilisation. Par ailleurs, gr\u00e2ce \u00e0 notre outil Studio vous pourrez d\u00e9crire votre application sans avoir \u00e0 \u00e9crire du code ou \u00e0 conna\u00eetre toutes les sp\u00e9cifications des Recettes car tous les Concepts drop'in sont accessibles via une interface graphique.","title":"Concepts"},{"location":"fr/concepts/auth/","text":"Authentification L'Authentification permet aux Propri\u00e9taires de s'identifier et d'\u00eatre attribu\u00e9s \u00e0 des acc\u00e8s sp\u00e9cifiques.","title":"Authentification"},{"location":"fr/concepts/auth/#authentification","text":"L'Authentification permet aux Propri\u00e9taires de s'identifier et d'\u00eatre attribu\u00e9s \u00e0 des acc\u00e8s sp\u00e9cifiques.","title":"Authentification"},{"location":"fr/concepts/auth/groups/","tags":["alpha"],"text":"Groupes Les Groupes d\u00e9crivent les acc\u00e8s d'un Utilisateur sur les ressources d'un Propri\u00e9taire comme par exemple : les acc\u00e8s \u00e0 une Organisation (administration, facturation, acc\u00e8s, Jetons , Royaumes , Paiements, ...) des Mod\u00e8les (cr\u00e9ation, modification, suppression, ...) les Projets en pr\u00e9cisant pour chaque les Permissions \u00e0 utiliser Une fois cr\u00e9\u00e9, un Groupe peut \u00eatre attribu\u00e9 \u00e0 des Utilisateurs . Il est m\u00eame possible d'assigner des conditions suppl\u00e9mentaires permettant de cr\u00e9er des sous-groupes.","title":"Groupes"},{"location":"fr/concepts/auth/groups/#groupes","text":"Les Groupes d\u00e9crivent les acc\u00e8s d'un Utilisateur sur les ressources d'un Propri\u00e9taire comme par exemple : les acc\u00e8s \u00e0 une Organisation (administration, facturation, acc\u00e8s, Jetons , Royaumes , Paiements, ...) des Mod\u00e8les (cr\u00e9ation, modification, suppression, ...) les Projets en pr\u00e9cisant pour chaque les Permissions \u00e0 utiliser Une fois cr\u00e9\u00e9, un Groupe peut \u00eatre attribu\u00e9 \u00e0 des Utilisateurs . Il est m\u00eame possible d'assigner des conditions suppl\u00e9mentaires permettant de cr\u00e9er des sous-groupes.","title":"Groupes"},{"location":"fr/concepts/auth/permissions/","tags":["alpha"],"text":"Permissions Les Permissions d\u00e9crivent les acc\u00e8s d'un Utilisateur aux ressources d'un Mod\u00e8le .","title":"Permissions"},{"location":"fr/concepts/auth/permissions/#permissions","text":"Les Permissions d\u00e9crivent les acc\u00e8s d'un Utilisateur aux ressources d'un Mod\u00e8le .","title":"Permissions"},{"location":"fr/concepts/auth/realms/","tags":["alpha"],"text":"Royaumes Un Royaume permet aux Organisations l'inscription d' Utilisateurs gr\u00e2ce \u00e0 une combinaison d'adresses e-mail et d'un mot de passe. Quand un Utilisateurs s'inscrit sur dropin.cloud , il utilise le Royaume drop'in. Quand un Utilisateur s'inscrit sur un Projet ou une Organisation qui utilise les fonctionnalit\u00e9s d'authentification de drop'in, il utilise le Royaume d\u00e9fini par celle-ci. Une Organisation peut configurer un Royaume pour limiter \u00e0 une seule adresse e-mail les comptes des Utilisateurs ou laisser la possibilit\u00e9 d'en utiliser plusieurs.","title":"Royaumes"},{"location":"fr/concepts/auth/realms/#royaumes","text":"Un Royaume permet aux Organisations l'inscription d' Utilisateurs gr\u00e2ce \u00e0 une combinaison d'adresses e-mail et d'un mot de passe. Quand un Utilisateurs s'inscrit sur dropin.cloud , il utilise le Royaume drop'in. Quand un Utilisateur s'inscrit sur un Projet ou une Organisation qui utilise les fonctionnalit\u00e9s d'authentification de drop'in, il utilise le Royaume d\u00e9fini par celle-ci. Une Organisation peut configurer un Royaume pour limiter \u00e0 une seule adresse e-mail les comptes des Utilisateurs ou laisser la possibilit\u00e9 d'en utiliser plusieurs.","title":"Royaumes"},{"location":"fr/concepts/auth/tokens/","tags":["alpha"],"text":"Jetons Un Jeton est une cha\u00eene de caract\u00e8res au format JWT permettant l'identification et la v\u00e9rification des niveaux d'acc\u00e8s d'un Utilisateur ou d'une Organisation .","title":"Jetons"},{"location":"fr/concepts/auth/tokens/#jetons","text":"Un Jeton est une cha\u00eene de caract\u00e8res au format JWT permettant l'identification et la v\u00e9rification des niveaux d'acc\u00e8s d'un Utilisateur ou d'une Organisation .","title":"Jetons"},{"location":"fr/concepts/automations/","text":"Automatisations Les Automatisations permettent l'ex\u00e9cution automatique de logiques.","title":"Automatisations"},{"location":"fr/concepts/automations/#automatisations","text":"Les Automatisations permettent l'ex\u00e9cution automatique de logiques.","title":"Automatisations"},{"location":"fr/concepts/automations/deployments/","tags":["stable"],"text":"D\u00e9ploiements Les D\u00e9ploiements permettent l'ex\u00e9cution d'un Conteneur . Sont d\u00e9crits : les variables d'environnement \u00e0 utiliser les ports \u00e0 rediriger par un Domaine les ports accessibles par d'autres D\u00e9ploiements les ressources maximales \u00e0 utiliser (m\u00e9moire et processeur) les Volumes \u00e0 utiliser","title":"D\u00e9ploiements"},{"location":"fr/concepts/automations/deployments/#deploiements","text":"Les D\u00e9ploiements permettent l'ex\u00e9cution d'un Conteneur . Sont d\u00e9crits : les variables d'environnement \u00e0 utiliser les ports \u00e0 rediriger par un Domaine les ports accessibles par d'autres D\u00e9ploiements les ressources maximales \u00e0 utiliser (m\u00e9moire et processeur) les Volumes \u00e0 utiliser","title":"D\u00e9ploiements"},{"location":"fr/concepts/automations/functions/","tags":["alpha"],"text":"Fonctions Les Fonctions permettent de d\u00e9crire un comportement en \u00c9tapes lorsqu'un D\u00e9clencheur est activ\u00e9 ou lorsqu'on les ex\u00e9cute manuellement. \u00c9tapes Une \u00c9tape est une s\u00e9rie d'actions ex\u00e9cut\u00e9e par des Fonctions. Les \u00c9tapes sont li\u00e9es par un syst\u00e8me de d\u00e9pendances permettant d'identifier leur ordre d'ex\u00e9cution. Les actions d'une \u00c9tape sont ex\u00e9cut\u00e9es successivement. Actions requ\u00eate : envoi d'une requ\u00eate \u00e0 un serveur (HTTP, WS, ...) recherche : parcours une donn\u00e9e avec des Manipulateurs pour extraire des informations transformation : permet de passer d'un texte \u00e0 en un objet via une Syntaxe cryptographie : g\u00e9n\u00e8re des cl\u00e9s de cryptage (bcrypt, JWT, UUID, RSA, ...) collection : effectue une op\u00e9ration de lecture ou d'\u00e9criture sur une Collection fonction : appel d'une autre Fonction avec ses Options connecteur : communication avec une service externe (API) via un Connecteur et ses Options base de donn\u00e9es : effectue des lectures ou des \u00e9critures avec une requ\u00eate email : permet un envoi manuel de messages page : permet de simuler la navigation sur une Page","title":"Fonctions"},{"location":"fr/concepts/automations/functions/#fonctions","text":"Les Fonctions permettent de d\u00e9crire un comportement en \u00c9tapes lorsqu'un D\u00e9clencheur est activ\u00e9 ou lorsqu'on les ex\u00e9cute manuellement.","title":"Fonctions"},{"location":"fr/concepts/automations/functions/#etapes","text":"Une \u00c9tape est une s\u00e9rie d'actions ex\u00e9cut\u00e9e par des Fonctions. Les \u00c9tapes sont li\u00e9es par un syst\u00e8me de d\u00e9pendances permettant d'identifier leur ordre d'ex\u00e9cution. Les actions d'une \u00c9tape sont ex\u00e9cut\u00e9es successivement.","title":"\u00c9tapes"},{"location":"fr/concepts/automations/functions/#actions","text":"requ\u00eate : envoi d'une requ\u00eate \u00e0 un serveur (HTTP, WS, ...) recherche : parcours une donn\u00e9e avec des Manipulateurs pour extraire des informations transformation : permet de passer d'un texte \u00e0 en un objet via une Syntaxe cryptographie : g\u00e9n\u00e8re des cl\u00e9s de cryptage (bcrypt, JWT, UUID, RSA, ...) collection : effectue une op\u00e9ration de lecture ou d'\u00e9criture sur une Collection fonction : appel d'une autre Fonction avec ses Options connecteur : communication avec une service externe (API) via un Connecteur et ses Options base de donn\u00e9es : effectue des lectures ou des \u00e9critures avec une requ\u00eate email : permet un envoi manuel de messages page : permet de simuler la navigation sur une Page","title":"Actions"},{"location":"fr/concepts/automations/migrations/","tags":["beta"],"text":"Migrations Les Migrations d\u00e9finissent les op\u00e9rations \u00e0 effectuer en cas de modification du Format des Collections . Il sera possible d'appliquer une Migration lors de la mise \u00e0 jour du Mod\u00e8le d'un Projet .","title":"Migrations"},{"location":"fr/concepts/automations/migrations/#migrations","text":"Les Migrations d\u00e9finissent les op\u00e9rations \u00e0 effectuer en cas de modification du Format des Collections . Il sera possible d'appliquer une Migration lors de la mise \u00e0 jour du Mod\u00e8le d'un Projet .","title":"Migrations"},{"location":"fr/concepts/automations/triggers/","tags":["alpha"],"text":"D\u00e9clencheurs Les D\u00e9clencheurs permettent l'ex\u00e9cution de Fonctions bas\u00e9 sur des crit\u00e8res sp\u00e9cifiques : attente d'une requ\u00eate depuis un Domaine (HTTP, WebSocket) r\u00e9gularit\u00e9 temporelle (CRON)","title":"D\u00e9clencheurs"},{"location":"fr/concepts/automations/triggers/#declencheurs","text":"Les D\u00e9clencheurs permettent l'ex\u00e9cution de Fonctions bas\u00e9 sur des crit\u00e8res sp\u00e9cifiques : attente d'une requ\u00eate depuis un Domaine (HTTP, WebSocket) r\u00e9gularit\u00e9 temporelle (CRON)","title":"D\u00e9clencheurs"},{"location":"fr/concepts/catalog/","text":"Catalogue Le Catalogue drop'in est un service dropin.cloud qui vous permettra de d\u00e9couvrir des Mod\u00e8les et des Projets cr\u00e9\u00e9s par la communaut\u00e9. Un syst\u00e8me de points sera mis en place pour r\u00e9compenser les \u00e9l\u00e9ments les plus populaires et les contributeurs les plus actifs. Des \u00e9l\u00e9ments payants pourraient \u00e9galement \u00eatre disponibles \u00e0 l'avenir, bas\u00e9s sur un mod\u00e8le d'abonnement ou par paiement unique. \u00c9videmment, seules les organisations certifi\u00e9es pourront publier ce type d'\u00e9l\u00e9ments pour \u00e9viter tout abus \u00e9ventuel de tarification.","title":"Catalogue"},{"location":"fr/concepts/catalog/#catalogue","text":"Le Catalogue drop'in est un service dropin.cloud qui vous permettra de d\u00e9couvrir des Mod\u00e8les et des Projets cr\u00e9\u00e9s par la communaut\u00e9. Un syst\u00e8me de points sera mis en place pour r\u00e9compenser les \u00e9l\u00e9ments les plus populaires et les contributeurs les plus actifs. Des \u00e9l\u00e9ments payants pourraient \u00e9galement \u00eatre disponibles \u00e0 l'avenir, bas\u00e9s sur un mod\u00e8le d'abonnement ou par paiement unique. \u00c9videmment, seules les organisations certifi\u00e9es pourront publier ce type d'\u00e9l\u00e9ments pour \u00e9viter tout abus \u00e9ventuel de tarification.","title":"Catalogue"},{"location":"fr/concepts/catalog/models/","tags":["alpha"],"text":"Mod\u00e8les Un Mod\u00e8le est un regroupement de Recettes avec un syst\u00e8me de Versions. Les \u00e9l\u00e9ments renseign\u00e9s dans un Mod\u00e8le sont : une ic\u00f4ne et une description les Utilisateurs auteurs le Format de ses Options la configuration des h\u00f4tes utilis\u00e9s pour les Connecteurs les stades possibles pour une T\u00e2che de la Communaut\u00e9 Chaque Version est isol\u00e9e des autres mais il est possible de faire des liens entre les Recettes . Les Recettes pouvant se trouver dans un Mod\u00e8le sont : pour les Interfaces : les Composants les Styles les Pages les Sessions pour le Stockage : les Collections les M\u00e9triques les Journaux les Valeurs pour les Validations : les Types les Anomalies les Syntaxes pour l' Automatisation les Fonctions les D\u00e9clencheurs les Migrations les D\u00e9ploiements pour l' Authentification : les Permissions pour les Terminaisons : les Connecteurs pour l' \u00c9diteur : les Sections les Visualisations les Formulaires les Cartes","title":"Mod\u00e8les"},{"location":"fr/concepts/catalog/models/#modeles","text":"Un Mod\u00e8le est un regroupement de Recettes avec un syst\u00e8me de Versions. Les \u00e9l\u00e9ments renseign\u00e9s dans un Mod\u00e8le sont : une ic\u00f4ne et une description les Utilisateurs auteurs le Format de ses Options la configuration des h\u00f4tes utilis\u00e9s pour les Connecteurs les stades possibles pour une T\u00e2che de la Communaut\u00e9 Chaque Version est isol\u00e9e des autres mais il est possible de faire des liens entre les Recettes . Les Recettes pouvant se trouver dans un Mod\u00e8le sont : pour les Interfaces : les Composants les Styles les Pages les Sessions pour le Stockage : les Collections les M\u00e9triques les Journaux les Valeurs pour les Validations : les Types les Anomalies les Syntaxes pour l' Automatisation les Fonctions les D\u00e9clencheurs les Migrations les D\u00e9ploiements pour l' Authentification : les Permissions pour les Terminaisons : les Connecteurs pour l' \u00c9diteur : les Sections les Visualisations les Formulaires les Cartes","title":"Mod\u00e8les"},{"location":"fr/concepts/catalog/projects/","tags":["alpha"],"text":"Projets Un Projet est l'utilisation d'un Mod\u00e8le : il applique le contenu des Recettes d'un Mod\u00e8le pour fonctionner. Il est donc possible d'avoir un seul Mod\u00e8le et plusieurs Projets avec des Options sp\u00e9cifiques \u00e0 chaque environnement. Les \u00e9l\u00e9ments renseign\u00e9s dans un Projet sont : un Mod\u00e8le , sa Version et ses Options la configuration des h\u00f4tes utilis\u00e9s pour les Connecteurs des informations sp\u00e9cifiques \u00e0 chaque plateforme (web, Android, iOS, Linux, Windows, macOS) Lors de la mise \u00e0 jour d'un Mod\u00e8le , il sera possible de migrer manuellement ou automatiquement le Projet vers une nouvelle version.","title":"Projets"},{"location":"fr/concepts/catalog/projects/#projets","text":"Un Projet est l'utilisation d'un Mod\u00e8le : il applique le contenu des Recettes d'un Mod\u00e8le pour fonctionner. Il est donc possible d'avoir un seul Mod\u00e8le et plusieurs Projets avec des Options sp\u00e9cifiques \u00e0 chaque environnement. Les \u00e9l\u00e9ments renseign\u00e9s dans un Projet sont : un Mod\u00e8le , sa Version et ses Options la configuration des h\u00f4tes utilis\u00e9s pour les Connecteurs des informations sp\u00e9cifiques \u00e0 chaque plateforme (web, Android, iOS, Linux, Windows, macOS) Lors de la mise \u00e0 jour d'un Mod\u00e8le , il sera possible de migrer manuellement ou automatiquement le Projet vers une nouvelle version.","title":"Projets"},{"location":"fr/concepts/editor/","text":"\u00c9diteur L'\u00c9diteur est un service dropin.cloud qui vous permettra de g\u00e9rer au quotidien une structure de donn\u00e9es bas\u00e9e sur les Recettes d'un Mod\u00e8le . C'est une forme de back-office automatiquement g\u00e9n\u00e9r\u00e9 \u00e0 partir des sp\u00e9cifications que vous avez d\u00e9finies dans votre Projet .","title":"\u00c9diteur"},{"location":"fr/concepts/editor/#editeur","text":"L'\u00c9diteur est un service dropin.cloud qui vous permettra de g\u00e9rer au quotidien une structure de donn\u00e9es bas\u00e9e sur les Recettes d'un Mod\u00e8le . C'est une forme de back-office automatiquement g\u00e9n\u00e9r\u00e9 \u00e0 partir des sp\u00e9cifications que vous avez d\u00e9finies dans votre Projet .","title":"\u00c9diteur"},{"location":"fr/concepts/editor/forms/","tags":["beta"],"text":"Formulaires","title":"Formulaires"},{"location":"fr/concepts/editor/forms/#formulaires","text":"","title":"Formulaires"},{"location":"fr/concepts/editor/maps/","tags":["beta"],"text":"Cartes","title":"Cartes"},{"location":"fr/concepts/editor/maps/#cartes","text":"","title":"Cartes"},{"location":"fr/concepts/editor/visualizations/","tags":["alpha"],"text":"Visualisations","title":"Visualisations"},{"location":"fr/concepts/editor/visualizations/#visualisations","text":"","title":"Visualisations"},{"location":"fr/concepts/endpoints/","text":"Terminaisons Les Terminaisons permettent l'envoi et la r\u00e9ception de requ\u00eates avec des services externes.","title":"Terminaisons"},{"location":"fr/concepts/endpoints/#terminaisons","text":"Les Terminaisons permettent l'envoi et la r\u00e9ception de requ\u00eates avec des services externes.","title":"Terminaisons"},{"location":"fr/concepts/endpoints/addresses/","tags":["stable"],"text":"Adresses","title":"Adresses"},{"location":"fr/concepts/endpoints/addresses/#adresses","text":"","title":"Adresses"},{"location":"fr/concepts/endpoints/connectors/","tags":["beta"],"text":"Connecteurs","title":"Connecteurs"},{"location":"fr/concepts/endpoints/connectors/#connecteurs","text":"","title":"Connecteurs"},{"location":"fr/concepts/endpoints/databases/","tags":["stable"],"text":"Bases de donn\u00e9es","title":"Bases de donn\u00e9es"},{"location":"fr/concepts/endpoints/databases/#bases-de-donnees","text":"","title":"Bases de donn\u00e9es"},{"location":"fr/concepts/endpoints/domains/","tags":["alpha"],"text":"Domaines Les Domaines permettent de d\u00e9crire un routage effectu\u00e9 sur des Pages , des D\u00e9clencheurs et des D\u00e9ploiements . Il est possible de g\u00e9rer des pr\u00e9fixes et des sous-domaines pour organiser la structure de vos applications. Un Projet doit \u00eatre s\u00e9lectionn\u00e9 pour chaque routage.","title":"Domaines"},{"location":"fr/concepts/endpoints/domains/#domaines","text":"Les Domaines permettent de d\u00e9crire un routage effectu\u00e9 sur des Pages , des D\u00e9clencheurs et des D\u00e9ploiements . Il est possible de g\u00e9rer des pr\u00e9fixes et des sous-domaines pour organiser la structure de vos applications. Un Projet doit \u00eatre s\u00e9lectionn\u00e9 pour chaque routage.","title":"Domaines"},{"location":"fr/concepts/endpoints/providers/","tags":["stable"],"text":"Fournisseurs","title":"Fournisseurs"},{"location":"fr/concepts/endpoints/providers/#fournisseurs","text":"","title":"Fournisseurs"},{"location":"fr/concepts/interfaces/","text":"Interfaces Les Interfaces regroupent l'ensembles des ressources n\u00e9cessaires \u00e0 la conception d'exp\u00e9riences graphiques web, bureau et mobile.","title":"Interfaces"},{"location":"fr/concepts/interfaces/#interfaces","text":"Les Interfaces regroupent l'ensembles des ressources n\u00e9cessaires \u00e0 la conception d'exp\u00e9riences graphiques web, bureau et mobile.","title":"Interfaces"},{"location":"fr/concepts/interfaces/components/","tags":["alpha"],"text":"Composants Les Composants permettent de cr\u00e9er une interface graphique d\u00e9compos\u00e9e en \u00e9l\u00e9ments r\u00e9utilisables et imbriquables. L'ensemble du contenu d'un Composant est d\u00e9fini par des Blocs qui sont d\u00e9coup\u00e9es en deux cat\u00e9gories : les Blocs statiques et les Blocs dynamiques. Chaque Bloc poss\u00e8de des Options qui permettent de d\u00e9finir son comportement. Il est par exemple possible de d\u00e9finir le d\u00e9clenchement d'une Fonction lors d'un appui sur un Bloc, ou encore en tant que condition pour d\u00e9terminer si un Bloc doit \u00eatre affich\u00e9 ou non. Les Blocs peuvent aussi \u00eatre li\u00e9s \u00e0 des Styles qui permettent de d\u00e9finir leur apparence. L'application d'un Style peut \u00eatre conditionn\u00e9 par une condition ex\u00e9cut\u00e9e par une Fonction . Blocs statiques Zone : permet le regroupement Blocs Texte : affiche du texte potentiellement dans plusieurs langues Image : affiche une image contenue dans un Volume ou depuis une URL externe Lien : lien vers une Page ou une URL externe Bouton : d\u00e9clenche une action lors d'un appui Saisie : entr\u00e9e d'une valeur par l'utilisateur Case \u00e0 cocher : permet de d\u00e9finir un \u00e9tat binaire Vid\u00e9o : affiche une vid\u00e9o contenue dans un Volume ou depuis une URL externe Diviseur : s\u00e9pare dynamiquement deux Blocs horizontalement ou verticalement D\u00e9pla\u00e7able : permet de d\u00e9placer ce Bloc dans un Emplacement Emplacement : regroupe des Blocs D\u00e9pla\u00e7ables Blocs dynamiques Composant : permet d'appeler une autre Recette Composant R\u00e9f\u00e9rence : permet d'afficher la valeur d'une Option d'un autre Bloc It\u00e9ration : permet d'afficher autant de Blocs qu'il y a d'\u00e9l\u00e9ments retourn\u00e9s par une Fonction","title":"Composants"},{"location":"fr/concepts/interfaces/components/#composants","text":"Les Composants permettent de cr\u00e9er une interface graphique d\u00e9compos\u00e9e en \u00e9l\u00e9ments r\u00e9utilisables et imbriquables. L'ensemble du contenu d'un Composant est d\u00e9fini par des Blocs qui sont d\u00e9coup\u00e9es en deux cat\u00e9gories : les Blocs statiques et les Blocs dynamiques. Chaque Bloc poss\u00e8de des Options qui permettent de d\u00e9finir son comportement. Il est par exemple possible de d\u00e9finir le d\u00e9clenchement d'une Fonction lors d'un appui sur un Bloc, ou encore en tant que condition pour d\u00e9terminer si un Bloc doit \u00eatre affich\u00e9 ou non. Les Blocs peuvent aussi \u00eatre li\u00e9s \u00e0 des Styles qui permettent de d\u00e9finir leur apparence. L'application d'un Style peut \u00eatre conditionn\u00e9 par une condition ex\u00e9cut\u00e9e par une Fonction .","title":"Composants"},{"location":"fr/concepts/interfaces/components/#blocs-statiques","text":"Zone : permet le regroupement Blocs Texte : affiche du texte potentiellement dans plusieurs langues Image : affiche une image contenue dans un Volume ou depuis une URL externe Lien : lien vers une Page ou une URL externe Bouton : d\u00e9clenche une action lors d'un appui Saisie : entr\u00e9e d'une valeur par l'utilisateur Case \u00e0 cocher : permet de d\u00e9finir un \u00e9tat binaire Vid\u00e9o : affiche une vid\u00e9o contenue dans un Volume ou depuis une URL externe Diviseur : s\u00e9pare dynamiquement deux Blocs horizontalement ou verticalement D\u00e9pla\u00e7able : permet de d\u00e9placer ce Bloc dans un Emplacement Emplacement : regroupe des Blocs D\u00e9pla\u00e7ables","title":"Blocs statiques"},{"location":"fr/concepts/interfaces/components/#blocs-dynamiques","text":"Composant : permet d'appeler une autre Recette Composant R\u00e9f\u00e9rence : permet d'afficher la valeur d'une Option d'un autre Bloc It\u00e9ration : permet d'afficher autant de Blocs qu'il y a d'\u00e9l\u00e9ments retourn\u00e9s par une Fonction","title":"Blocs dynamiques"},{"location":"fr/concepts/interfaces/pages/","tags":["alpha"],"text":"Pages Les Pages permettent de d\u00e9finir un Composant \u00e0 utiliser pour permettre une navigation sur mobile, bureau ou web par le biais d'un Domaine . La configuration des Pages d\u00e9pend de la plateforme sur laquelle elle devra appara\u00eetre : web : chemin d'acc\u00e8s avec d'\u00e9ventuels param\u00e8tres ({id}) mobile et bureau : identifiant de l'application et URLs de deep linking","title":"Pages"},{"location":"fr/concepts/interfaces/pages/#pages","text":"Les Pages permettent de d\u00e9finir un Composant \u00e0 utiliser pour permettre une navigation sur mobile, bureau ou web par le biais d'un Domaine . La configuration des Pages d\u00e9pend de la plateforme sur laquelle elle devra appara\u00eetre : web : chemin d'acc\u00e8s avec d'\u00e9ventuels param\u00e8tres ({id}) mobile et bureau : identifiant de l'application et URLs de deep linking","title":"Pages"},{"location":"fr/concepts/interfaces/sessions/","tags":["alpha"],"text":"Sessions Les Sessions permettent de communiquer avec le syst\u00e8me de stockage local lors de l'affichage d'une Page . Sur chaque plateforme, des syst\u00e8mes diff\u00e9rents peuvent \u00eatre d\u00e9finis comme par exemple sur le web o\u00f9 vous pourrez utiliser sp\u00e9cifiquement les cookies ou IndexedDB.","title":"Sessions"},{"location":"fr/concepts/interfaces/sessions/#sessions","text":"Les Sessions permettent de communiquer avec le syst\u00e8me de stockage local lors de l'affichage d'une Page . Sur chaque plateforme, des syst\u00e8mes diff\u00e9rents peuvent \u00eatre d\u00e9finis comme par exemple sur le web o\u00f9 vous pourrez utiliser sp\u00e9cifiquement les cookies ou IndexedDB.","title":"Sessions"},{"location":"fr/concepts/interfaces/styles/","tags":["alpha"],"text":"Styles Les Styles permettent d'appliquer des r\u00e8gles de disposition d'affichage des Blocs d'un Composant . Il existe plusieurs cat\u00e9gories de Styles : Dimensions : taille d'un Bloc Position : positionnement d'un Bloc Marges : espacements entre un Bloc et ses voisins Goutti\u00e8res : espacements \u00e0 l'int\u00e9rieur d'un Bloc Fonds : style de fond d'un Bloc Bords : style des bords d'un Bloc Ombres : ombre port\u00e9e d'un Bloc Texte : li\u00e9 au Bloc Texte Zone : li\u00e9 au Bloc Zone Saisie : li\u00e9 au Bloc Saisie Un Style est d\u00e9compos\u00e9 en plusieurs Classes qui portent toutes un nom unique. Chaque Classe peut \u00eatre appliqu\u00e9e \u00e0 n'importe quel Bloc. Il est possible de cr\u00e9er des Classes conditionnelles afin d'appliquer des Styles en fonction de conditions bas\u00e9es sur : la plateforme (web, Android, iOS, linux, windows, macOS) les dimensions (longueur et largeur) des \u00e9tats (survol, focus, impression) Enfin, il est possible de cr\u00e9er des animations afin d'appliquer des trames de styles sur un Bloc avec une dur\u00e9e et une fr\u00e9quence d\u00e9finies.","title":"Styles"},{"location":"fr/concepts/interfaces/styles/#styles","text":"Les Styles permettent d'appliquer des r\u00e8gles de disposition d'affichage des Blocs d'un Composant . Il existe plusieurs cat\u00e9gories de Styles : Dimensions : taille d'un Bloc Position : positionnement d'un Bloc Marges : espacements entre un Bloc et ses voisins Goutti\u00e8res : espacements \u00e0 l'int\u00e9rieur d'un Bloc Fonds : style de fond d'un Bloc Bords : style des bords d'un Bloc Ombres : ombre port\u00e9e d'un Bloc Texte : li\u00e9 au Bloc Texte Zone : li\u00e9 au Bloc Zone Saisie : li\u00e9 au Bloc Saisie Un Style est d\u00e9compos\u00e9 en plusieurs Classes qui portent toutes un nom unique. Chaque Classe peut \u00eatre appliqu\u00e9e \u00e0 n'importe quel Bloc. Il est possible de cr\u00e9er des Classes conditionnelles afin d'appliquer des Styles en fonction de conditions bas\u00e9es sur : la plateforme (web, Android, iOS, linux, windows, macOS) les dimensions (longueur et largeur) des \u00e9tats (survol, focus, impression) Enfin, il est possible de cr\u00e9er des animations afin d'appliquer des trames de styles sur un Bloc avec une dur\u00e9e et une fr\u00e9quence d\u00e9finies.","title":"Styles"},{"location":"fr/concepts/interfaces/themes/","tags":["alpha"],"text":"Th\u00e8mes Les Th\u00e8mes permettent de d\u00e9finir une charte graphique avec des couleurs, des tailles, des polices et des Styles globaux.","title":"Th\u00e8mes"},{"location":"fr/concepts/interfaces/themes/#themes","text":"Les Th\u00e8mes permettent de d\u00e9finir une charte graphique avec des couleurs, des tailles, des polices et des Styles globaux.","title":"Th\u00e8mes"},{"location":"fr/concepts/owners/","text":"Propri\u00e9taires Les Propri\u00e9taires peuvent : acc\u00e9der \u00e0 un Projet issu d'un Mod\u00e8le \u00e9diter les Recettes d'un Mod\u00e8le Les Recettes pouvant se trouver au niveau d'un Propri\u00e9taire sont : pour le Catalogue : les Mod\u00e8les les Projets pour les Interfaces : les Th\u00e8mes pour le Stockage : les Volumes les D\u00e9p\u00f4ts les Conteneurs pour l' Authentification : les Royaumes les Groupes pour les Terminaisons : les Domaines les Adresses les Fournisseurs les Bases de donn\u00e9es","title":"Propri\u00e9taires"},{"location":"fr/concepts/owners/#proprietaires","text":"Les Propri\u00e9taires peuvent : acc\u00e9der \u00e0 un Projet issu d'un Mod\u00e8le \u00e9diter les Recettes d'un Mod\u00e8le Les Recettes pouvant se trouver au niveau d'un Propri\u00e9taire sont : pour le Catalogue : les Mod\u00e8les les Projets pour les Interfaces : les Th\u00e8mes pour le Stockage : les Volumes les D\u00e9p\u00f4ts les Conteneurs pour l' Authentification : les Royaumes les Groupes pour les Terminaisons : les Domaines les Adresses les Fournisseurs les Bases de donn\u00e9es","title":"Propri\u00e9taires"},{"location":"fr/concepts/owners/organizations/","tags":["beta"],"text":"Organisations Les Organisations sont cr\u00e9\u00e9es et poss\u00e9d\u00e9es par des Utilisateurs . Contrairement aux Utilisateurs , les Organisations ne poss\u00e8dent pas la possibilit\u00e9 de s'authentifier sur les interfaces drop'in. De ce fait, l'ensemble des \u00e9changes effectu\u00e9s par API doivent utiliser des Jetons manuellement g\u00e9n\u00e9r\u00e9s. Une autre diff\u00e9rence avec les Utilisateurs est qu'une Organisation peut cr\u00e9er des Royaumes pour permettre l'inscription d'Utilisateurs, et des Paiements pour effectuer des transactions bancaires. Les Paiements permettent d'utiliser via des Composants la carte bancaire d'un Utilisateur dans le carde d'un Projet .","title":"Organisations"},{"location":"fr/concepts/owners/organizations/#organisations","text":"Les Organisations sont cr\u00e9\u00e9es et poss\u00e9d\u00e9es par des Utilisateurs . Contrairement aux Utilisateurs , les Organisations ne poss\u00e8dent pas la possibilit\u00e9 de s'authentifier sur les interfaces drop'in. De ce fait, l'ensemble des \u00e9changes effectu\u00e9s par API doivent utiliser des Jetons manuellement g\u00e9n\u00e9r\u00e9s. Une autre diff\u00e9rence avec les Utilisateurs est qu'une Organisation peut cr\u00e9er des Royaumes pour permettre l'inscription d'Utilisateurs, et des Paiements pour effectuer des transactions bancaires. Les Paiements permettent d'utiliser via des Composants la carte bancaire d'un Utilisateur dans le carde d'un Projet .","title":"Organisations"},{"location":"fr/concepts/owners/users/","tags":["alpha"],"text":"Utilisateurs Un Utilisateur est un individu inscrit aupr\u00e8s d'un ou de plusieurs Royaumes . Il poss\u00e8de obligatoirement au moins une adresse e-mail et un mot de passe. Chaque Utilisateur a des donn\u00e9es de compte (informations personnelles, pr\u00e9f\u00e9rences, mots de passe). Les Royaumes \u00e9tant isol\u00e9s, ces donn\u00e9es sont sp\u00e9cifiques \u00e0 chaque Royaume d'inscription. Seules les adresse e-mails peuvent \u00eatres partag\u00e9es. Un Utilisateur ne peut pas utiliser les Royaumes ou les Paiements sans passer par une Organisation .","title":"Utilisateurs"},{"location":"fr/concepts/owners/users/#utilisateurs","text":"Un Utilisateur est un individu inscrit aupr\u00e8s d'un ou de plusieurs Royaumes . Il poss\u00e8de obligatoirement au moins une adresse e-mail et un mot de passe. Chaque Utilisateur a des donn\u00e9es de compte (informations personnelles, pr\u00e9f\u00e9rences, mots de passe). Les Royaumes \u00e9tant isol\u00e9s, ces donn\u00e9es sont sp\u00e9cifiques \u00e0 chaque Royaume d'inscription. Seules les adresse e-mails peuvent \u00eatres partag\u00e9es. Un Utilisateur ne peut pas utiliser les Royaumes ou les Paiements sans passer par une Organisation .","title":"Utilisateurs"},{"location":"fr/concepts/recipes/","text":"Recettes Une Recette est la description d'une entit\u00e9, d'un \u00e9tat ou d'un comportement. Il existe deux types de Recettes : celles qui sont directement li\u00e9es \u00e0 un Propri\u00e9taire comme par exemple les Groupes , les Volumes , ou encore les Domaines celles se trouvant dans un Mod\u00e8le comme par exemple les Composants , les Fonctions , ou encore les Collections Seules les Recettes de Mod\u00e8les peuvent \u00eatre utilis\u00e9es pour cr\u00e9er des Projets ou \u00eatre partag\u00e9es avec d'autres utilisateurs via le Catalogue . Cat\u00e9gories Catalogue : gestion des Mod\u00e8les et des Projets Propri\u00e9taires : gestion des Utilisateurs et des Organisations Interfaces : cr\u00e9ation d'exp\u00e9riences graphiques Stockage : gestion de la persistance d'informations format\u00e9es Automatisations : actions automatis\u00e9es Validations : v\u00e9rification de la conformit\u00e9 de donn\u00e9es Authentification : gestion des acc\u00e8s des Utilisateurs Terminaisons : connexion \u00e0 des services externes \u00c9diteur : outil d'administration des Projets Donn\u00e9es d'ent\u00eate nom description termes, permet de d\u00e9finir le nom de la Recette pour qualifier une entit\u00e9 unique et pour plusieurs entit\u00e9s labels, mots permettant de cr\u00e9er des filtres pour s\u00e9lectionner un ensemble de Recettes","title":"Recettes"},{"location":"fr/concepts/recipes/#recettes","text":"Une Recette est la description d'une entit\u00e9, d'un \u00e9tat ou d'un comportement. Il existe deux types de Recettes : celles qui sont directement li\u00e9es \u00e0 un Propri\u00e9taire comme par exemple les Groupes , les Volumes , ou encore les Domaines celles se trouvant dans un Mod\u00e8le comme par exemple les Composants , les Fonctions , ou encore les Collections Seules les Recettes de Mod\u00e8les peuvent \u00eatre utilis\u00e9es pour cr\u00e9er des Projets ou \u00eatre partag\u00e9es avec d'autres utilisateurs via le Catalogue .","title":"Recettes"},{"location":"fr/concepts/recipes/#categories","text":"Catalogue : gestion des Mod\u00e8les et des Projets Propri\u00e9taires : gestion des Utilisateurs et des Organisations Interfaces : cr\u00e9ation d'exp\u00e9riences graphiques Stockage : gestion de la persistance d'informations format\u00e9es Automatisations : actions automatis\u00e9es Validations : v\u00e9rification de la conformit\u00e9 de donn\u00e9es Authentification : gestion des acc\u00e8s des Utilisateurs Terminaisons : connexion \u00e0 des services externes \u00c9diteur : outil d'administration des Projets","title":"Cat\u00e9gories"},{"location":"fr/concepts/recipes/#donnees-dentete","text":"nom description termes, permet de d\u00e9finir le nom de la Recette pour qualifier une entit\u00e9 unique et pour plusieurs entit\u00e9s labels, mots permettant de cr\u00e9er des filtres pour s\u00e9lectionner un ensemble de Recettes","title":"Donn\u00e9es d'ent\u00eate"},{"location":"fr/concepts/recipes/formats/","text":"Formats Les Formats sont des d\u00e9finitions de structure de donn\u00e9es et peuvent \u00eatre compos\u00e9s de : Types natifs uniques et compos\u00e9s d'autres Formats Types personnalis\u00e9s cr\u00e9\u00e9s par les Propri\u00e9taires contenant d'autres Formats Les Formats sont par exemple utilis\u00e9s : dans les Options des Recettes dans les Variations des Types dans les Champs des Collections dans le D\u00e9finisseur \"comparaison des Formats\" Un Format de type natif objet peut contenir l'information de tous les champs obligatoires ainsi que les valeurs par d\u00e9faut \u00e0 utiliser. En utilisant un Format, il est possible de poser des Contraintes sur les donn\u00e9es manipul\u00e9es en donnant une condition de validit\u00e9 et une Anomalie . Si la condition n'est pas remplie, l'Anomalie est d\u00e9clench\u00e9e et renvoie des erreurs personnalis\u00e9es. Les Formats peuvent aussi contenir des Marqueurs afin d'appliquer des s\u00e9lections dynamiques avec par exemple la \u00c9tape \"recherche\" dans une Fonction . Types natifs Uniques Audio Options : Volume \u00e0 utiliser, tableaux d'extensions accept\u00e9es, taille min et max, dur\u00e9e min et max Format : Item de Fichier Binaire Options : taille min et max Format : binaire Bool\u00e9en Affichage : \u00e9diter la date de r\u00e9alisation Variations : basique : bool\u00e9en t\u00e2che : objet avec un bool\u00e9en et deux date Choix Options : choix min et max, possibilit\u00e9s avec leur description Format : liste de choix Couleur Variations : Hexad\u00e9cimal : objet avec texte et opacit\u00e9 RGBA : objet avec des textes (rouge, vert, bleu et opacit\u00e9) HSLA : objet avec des textes Date Options : min et max Format : timestamp Affichage : unit\u00e9s (secondes, minutes, heures, jours, mois, ann\u00e9es) Dur\u00e9e Options : min et max Format : dur\u00e9e Affichage : unit\u00e9s (secondes, minutes, heures, jours, mois, ann\u00e9es) E-mail Options : nom de domaines \u00e0 utiliser, Expression R\u00e9guli\u00e8re sur le nom Format : texte Fichier Options : Volume \u00e0 utiliser, tableaux d'extensions accept\u00e9es, taille min et max Format : Item de Fichier Image Options : Volume \u00e0 utiliser, tableaux d'extensions accept\u00e9es, taille min et max, dimensions min et max Format : Item de Fichier Item Options : Collection avec ses Options Format : Item d'Item Localisation Options : pays inclus Format : objet Affichage : carte, champs (nom, nombre, rue, r\u00e9gion, ville, pays, code postal et coordonn\u00e9es GPS) Mesure Options : d\u00e9cimales, min et max, table de conversions Affichage : unit\u00e9 Format : objet avec quantit\u00e9 et unit\u00e9 P\u00e9riode Options : dates min et max Format : objet avec deux dates T\u00e9l\u00e9phone Options : liste de pr\u00e9fixes des pays accept\u00e9s Affichage : regroupement de nombres, s\u00e9parateur Format : objet avec pr\u00e9fixe et texte avec le num\u00e9ro Prix Options : min et max, liste des devises accept\u00e9es Affichage : devise Format : mesure avec devise Quantit\u00e9 Options : d\u00e9cimales, min et max Format : quantit\u00e9 R\u00e9currence Format : p\u00e9riode et intervalle (secondes, minutes, heures, jours, mois, ann\u00e9es) Texte Options : taille min, taille max, Expression R\u00e9guli\u00e8re Variations : texte par nombre : nom pour un, nom pour plusieurs, article si applicable par langue : pour chaque langue, un texte ou par nombre URL Format : texte Vid\u00e9o Options : Volume \u00e0 utiliser, tableaux d'extensions accept\u00e9es, taille min et max, dimensions min et max Format : Item de Fichier Compos\u00e9s Index Cl\u00e9s dynamiques et Formats communs Options : liste de cl\u00e9s possibles Liste Ensemble ordonn\u00e9 d'un m\u00eame Format Options : taille min et max Objet Cl\u00e9s fixes et Formats individuels Options : objet avec champs requis et valeurs par d\u00e9faut","title":"Formats"},{"location":"fr/concepts/recipes/formats/#formats","text":"Les Formats sont des d\u00e9finitions de structure de donn\u00e9es et peuvent \u00eatre compos\u00e9s de : Types natifs uniques et compos\u00e9s d'autres Formats Types personnalis\u00e9s cr\u00e9\u00e9s par les Propri\u00e9taires contenant d'autres Formats Les Formats sont par exemple utilis\u00e9s : dans les Options des Recettes dans les Variations des Types dans les Champs des Collections dans le D\u00e9finisseur \"comparaison des Formats\" Un Format de type natif objet peut contenir l'information de tous les champs obligatoires ainsi que les valeurs par d\u00e9faut \u00e0 utiliser. En utilisant un Format, il est possible de poser des Contraintes sur les donn\u00e9es manipul\u00e9es en donnant une condition de validit\u00e9 et une Anomalie . Si la condition n'est pas remplie, l'Anomalie est d\u00e9clench\u00e9e et renvoie des erreurs personnalis\u00e9es. Les Formats peuvent aussi contenir des Marqueurs afin d'appliquer des s\u00e9lections dynamiques avec par exemple la \u00c9tape \"recherche\" dans une Fonction .","title":"Formats"},{"location":"fr/concepts/recipes/formats/#types-natifs","text":"","title":"Types natifs"},{"location":"fr/concepts/recipes/formats/#uniques","text":"","title":"Uniques"},{"location":"fr/concepts/recipes/formats/#audio","text":"Options : Volume \u00e0 utiliser, tableaux d'extensions accept\u00e9es, taille min et max, dur\u00e9e min et max Format : Item de Fichier","title":"Audio"},{"location":"fr/concepts/recipes/formats/#binaire","text":"Options : taille min et max Format : binaire","title":"Binaire"},{"location":"fr/concepts/recipes/formats/#booleen","text":"Affichage : \u00e9diter la date de r\u00e9alisation Variations : basique : bool\u00e9en t\u00e2che : objet avec un bool\u00e9en et deux date","title":"Bool\u00e9en"},{"location":"fr/concepts/recipes/formats/#choix","text":"Options : choix min et max, possibilit\u00e9s avec leur description Format : liste de choix","title":"Choix"},{"location":"fr/concepts/recipes/formats/#couleur","text":"Variations : Hexad\u00e9cimal : objet avec texte et opacit\u00e9 RGBA : objet avec des textes (rouge, vert, bleu et opacit\u00e9) HSLA : objet avec des textes","title":"Couleur"},{"location":"fr/concepts/recipes/formats/#date","text":"Options : min et max Format : timestamp Affichage : unit\u00e9s (secondes, minutes, heures, jours, mois, ann\u00e9es)","title":"Date"},{"location":"fr/concepts/recipes/formats/#duree","text":"Options : min et max Format : dur\u00e9e Affichage : unit\u00e9s (secondes, minutes, heures, jours, mois, ann\u00e9es)","title":"Dur\u00e9e"},{"location":"fr/concepts/recipes/formats/#e-mail","text":"Options : nom de domaines \u00e0 utiliser, Expression R\u00e9guli\u00e8re sur le nom Format : texte","title":"E-mail"},{"location":"fr/concepts/recipes/formats/#fichier","text":"Options : Volume \u00e0 utiliser, tableaux d'extensions accept\u00e9es, taille min et max Format : Item de Fichier","title":"Fichier"},{"location":"fr/concepts/recipes/formats/#image","text":"Options : Volume \u00e0 utiliser, tableaux d'extensions accept\u00e9es, taille min et max, dimensions min et max Format : Item de Fichier","title":"Image"},{"location":"fr/concepts/recipes/formats/#item","text":"Options : Collection avec ses Options Format : Item d'Item","title":"Item"},{"location":"fr/concepts/recipes/formats/#localisation","text":"Options : pays inclus Format : objet Affichage : carte, champs (nom, nombre, rue, r\u00e9gion, ville, pays, code postal et coordonn\u00e9es GPS)","title":"Localisation"},{"location":"fr/concepts/recipes/formats/#mesure","text":"Options : d\u00e9cimales, min et max, table de conversions Affichage : unit\u00e9 Format : objet avec quantit\u00e9 et unit\u00e9","title":"Mesure"},{"location":"fr/concepts/recipes/formats/#periode","text":"Options : dates min et max Format : objet avec deux dates","title":"P\u00e9riode"},{"location":"fr/concepts/recipes/formats/#telephone","text":"Options : liste de pr\u00e9fixes des pays accept\u00e9s Affichage : regroupement de nombres, s\u00e9parateur Format : objet avec pr\u00e9fixe et texte avec le num\u00e9ro","title":"T\u00e9l\u00e9phone"},{"location":"fr/concepts/recipes/formats/#prix","text":"Options : min et max, liste des devises accept\u00e9es Affichage : devise Format : mesure avec devise","title":"Prix"},{"location":"fr/concepts/recipes/formats/#quantite","text":"Options : d\u00e9cimales, min et max Format : quantit\u00e9","title":"Quantit\u00e9"},{"location":"fr/concepts/recipes/formats/#recurrence","text":"Format : p\u00e9riode et intervalle (secondes, minutes, heures, jours, mois, ann\u00e9es)","title":"R\u00e9currence"},{"location":"fr/concepts/recipes/formats/#texte","text":"Options : taille min, taille max, Expression R\u00e9guli\u00e8re Variations : texte par nombre : nom pour un, nom pour plusieurs, article si applicable par langue : pour chaque langue, un texte ou par nombre","title":"Texte"},{"location":"fr/concepts/recipes/formats/#url","text":"Format : texte","title":"URL"},{"location":"fr/concepts/recipes/formats/#video","text":"Options : Volume \u00e0 utiliser, tableaux d'extensions accept\u00e9es, taille min et max, dimensions min et max Format : Item de Fichier","title":"Vid\u00e9o"},{"location":"fr/concepts/recipes/formats/#composes","text":"","title":"Compos\u00e9s"},{"location":"fr/concepts/recipes/formats/#index","text":"Cl\u00e9s dynamiques et Formats communs Options : liste de cl\u00e9s possibles","title":"Index"},{"location":"fr/concepts/recipes/formats/#liste","text":"Ensemble ordonn\u00e9 d'un m\u00eame Format Options : taille min et max","title":"Liste"},{"location":"fr/concepts/recipes/formats/#objet","text":"Cl\u00e9s fixes et Formats individuels Options : objet avec champs requis et valeurs par d\u00e9faut","title":"Objet"},{"location":"fr/concepts/recipes/getters/","text":"R\u00e9cup\u00e9rateurs Un R\u00e9cup\u00e9rateur permet d'acc\u00e9der \u00e0 une information dynamiquement. Il existe deux types d'acc\u00e8s : locaux, il s'agit d'une information au niveau d'une Recette externe, il s'agit d'une information charg\u00e9 depuis une autre Recipe ou un Item de Collection Dans un texte, il est possible d'utiliser un R\u00e9cup\u00e9rateur pour rendre un texte dynamique.","title":"R\u00e9cup\u00e9rateurs"},{"location":"fr/concepts/recipes/getters/#recuperateurs","text":"Un R\u00e9cup\u00e9rateur permet d'acc\u00e9der \u00e0 une information dynamiquement. Il existe deux types d'acc\u00e8s : locaux, il s'agit d'une information au niveau d'une Recette externe, il s'agit d'une information charg\u00e9 depuis une autre Recipe ou un Item de Collection Dans un texte, il est possible d'utiliser un R\u00e9cup\u00e9rateur pour rendre un texte dynamique.","title":"R\u00e9cup\u00e9rateurs"},{"location":"fr/concepts/recipes/options/","text":"Options Les Options permettent aux Recettes d'utiliser des param\u00e8tres personnalis\u00e9s quand elles fonctionnent. Dans chaque Recette , les Options attendues sont d\u00e9finies par un Format les rendant utilisables dans la Recette par le biais d'un R\u00e9cup\u00e9rateur .","title":"Options"},{"location":"fr/concepts/recipes/options/#options","text":"Les Options permettent aux Recettes d'utiliser des param\u00e8tres personnalis\u00e9s quand elles fonctionnent. Dans chaque Recette , les Options attendues sont d\u00e9finies par un Format les rendant utilisables dans la Recette par le biais d'un R\u00e9cup\u00e9rateur .","title":"Options"},{"location":"fr/concepts/recipes/setters/","text":"D\u00e9finisseurs Les D\u00e9finisseurs permettent de d\u00e9terminer et transformer des donn\u00e9es. Dans les diff\u00e9rents D\u00e9finisseurs ci-dessous, les valeurs utilis\u00e9es sont : soit des donn\u00e9es brutes soit issues d'un R\u00e9cup\u00e9rateur Dans un texte, il est possible d'utiliser un D\u00e9finisseur pour rendre un texte dynamique. Op\u00e9rations Arithm\u00e9tique addition : liste de quantit\u00e9s soustraction : liste de quantit\u00e9s multiplication : liste de quantit\u00e9s division : liste de quantit\u00e9s puissance : quantit\u00e9 racine carr\u00e9e : quantit\u00e9 exponentielle : quantit\u00e9 logarithme : quantit\u00e9 modulo : deux quantit\u00e9s Logique existe : valeur et : liste de bool\u00e9ens ou : liste de bool\u00e9ens non : bool\u00e9en Comparaisons moins que (<) : deux quantit\u00e9s au plus (<=) : deux quantit\u00e9s au moins (>=) : deux quantit\u00e9s plus que (>) : deux quantit\u00e9s \u00e9gal \u00e0 : deux quantit\u00e9s diff\u00e9rent de : deux quantit\u00e9s diff\u00e9rent de tous : une valeur, une liste de valeurs diff\u00e9rent d'un seul : une valeur, une liste de valeurs \u00e9gal \u00e0 tous : une valeur, une liste de valeurs \u00e9gal \u00e0 un seul : une valeur, une liste de valeurs Formats Commun taille en caract\u00e8res d'une valeur ou d'\u00e9l\u00e9ments d'une liste (length) : valeur ou liste comparaison des Formats : valeur \u00e0 v\u00e9rifier, Format \u00e0 d\u00e9tecter Textes concat\u00e9ner : valeurs, texte s\u00e9parateur (\" \") d\u00e9couper : valeur, texte s\u00e9parateur chercher une cha\u00eene de caract\u00e8res (match) : texte dans lequel chercher, expression r\u00e9guli\u00e8re remplacer : texte dans lequel chercher, texte \u00e0 remplacer, texte de remplacement traduire : valeur, langue, nombre, article \u00e0 utiliser minuscule : texte majuscule : texte majuscules des premi\u00e8res lettres de chaque mot (titleCase) : texte tronquer les espaces de d\u00e9but et de fin (trim) : texte, caract\u00e8res ([\"\"]), droite (true), gauche (true) abr\u00e9ger : texte, maximum, texte de fin (\"...\") transformation d'un texte avec une Syntaxe : texte, Syntaxe et ses Options s\u00e9lectionner une partie du texte : texte \u00e0 d\u00e9couper, d\u00e9but, fin Quantit\u00e9s moyenne : liste de quantit\u00e9s arrondi : quantit\u00e9, nombre de d\u00e9cimales (2), type d'arrondi (au plus proche, inf\u00e9rieur ou sup\u00e9rieur) Dates dur\u00e9e entre deux dates : d\u00e9but, fin, unit\u00e9 de retour (\"s\") jour de la semaine d'une date : date extraction (jour, semaine, mois, ann\u00e9e, heures, ...) : date ajouter une p\u00e9riode \u00e0 une date : date, p\u00e9riode (jours, mois, ann\u00e9es, ...) Listes quantit\u00e9 maximale dans une liste : liste de quantit\u00e9s quantit\u00e9 minimale dans une liste : liste de quantit\u00e9s fusionner plusieurs listes : liste de listes s\u00e9lectionner des \u00e9l\u00e9ments : liste de valeurs, index de d\u00e9but, index de fin Valeurs nombre al\u00e9atoire : quantit\u00e9 minimale (0), quantit\u00e9 maximale (1), nombre de d\u00e9cimales (2) pi : nombre de d\u00e9cimales (15) date actuelle : variation de retour (\"timestamp\")","title":"D\u00e9finisseurs"},{"location":"fr/concepts/recipes/setters/#definisseurs","text":"Les D\u00e9finisseurs permettent de d\u00e9terminer et transformer des donn\u00e9es. Dans les diff\u00e9rents D\u00e9finisseurs ci-dessous, les valeurs utilis\u00e9es sont : soit des donn\u00e9es brutes soit issues d'un R\u00e9cup\u00e9rateur Dans un texte, il est possible d'utiliser un D\u00e9finisseur pour rendre un texte dynamique.","title":"D\u00e9finisseurs"},{"location":"fr/concepts/recipes/setters/#operations","text":"","title":"Op\u00e9rations"},{"location":"fr/concepts/recipes/setters/#arithmetique","text":"addition : liste de quantit\u00e9s soustraction : liste de quantit\u00e9s multiplication : liste de quantit\u00e9s division : liste de quantit\u00e9s puissance : quantit\u00e9 racine carr\u00e9e : quantit\u00e9 exponentielle : quantit\u00e9 logarithme : quantit\u00e9 modulo : deux quantit\u00e9s","title":"Arithm\u00e9tique"},{"location":"fr/concepts/recipes/setters/#logique","text":"existe : valeur et : liste de bool\u00e9ens ou : liste de bool\u00e9ens non : bool\u00e9en","title":"Logique"},{"location":"fr/concepts/recipes/setters/#comparaisons","text":"moins que (<) : deux quantit\u00e9s au plus (<=) : deux quantit\u00e9s au moins (>=) : deux quantit\u00e9s plus que (>) : deux quantit\u00e9s \u00e9gal \u00e0 : deux quantit\u00e9s diff\u00e9rent de : deux quantit\u00e9s diff\u00e9rent de tous : une valeur, une liste de valeurs diff\u00e9rent d'un seul : une valeur, une liste de valeurs \u00e9gal \u00e0 tous : une valeur, une liste de valeurs \u00e9gal \u00e0 un seul : une valeur, une liste de valeurs","title":"Comparaisons"},{"location":"fr/concepts/recipes/setters/#commun","text":"taille en caract\u00e8res d'une valeur ou d'\u00e9l\u00e9ments d'une liste (length) : valeur ou liste comparaison des Formats : valeur \u00e0 v\u00e9rifier, Format \u00e0 d\u00e9tecter","title":"Commun"},{"location":"fr/concepts/recipes/setters/#textes","text":"concat\u00e9ner : valeurs, texte s\u00e9parateur (\" \") d\u00e9couper : valeur, texte s\u00e9parateur chercher une cha\u00eene de caract\u00e8res (match) : texte dans lequel chercher, expression r\u00e9guli\u00e8re remplacer : texte dans lequel chercher, texte \u00e0 remplacer, texte de remplacement traduire : valeur, langue, nombre, article \u00e0 utiliser minuscule : texte majuscule : texte majuscules des premi\u00e8res lettres de chaque mot (titleCase) : texte tronquer les espaces de d\u00e9but et de fin (trim) : texte, caract\u00e8res ([\"\"]), droite (true), gauche (true) abr\u00e9ger : texte, maximum, texte de fin (\"...\") transformation d'un texte avec une Syntaxe : texte, Syntaxe et ses Options s\u00e9lectionner une partie du texte : texte \u00e0 d\u00e9couper, d\u00e9but, fin","title":"Textes"},{"location":"fr/concepts/recipes/setters/#quantites","text":"moyenne : liste de quantit\u00e9s arrondi : quantit\u00e9, nombre de d\u00e9cimales (2), type d'arrondi (au plus proche, inf\u00e9rieur ou sup\u00e9rieur)","title":"Quantit\u00e9s"},{"location":"fr/concepts/recipes/setters/#dates","text":"dur\u00e9e entre deux dates : d\u00e9but, fin, unit\u00e9 de retour (\"s\") jour de la semaine d'une date : date extraction (jour, semaine, mois, ann\u00e9e, heures, ...) : date ajouter une p\u00e9riode \u00e0 une date : date, p\u00e9riode (jours, mois, ann\u00e9es, ...)","title":"Dates"},{"location":"fr/concepts/recipes/setters/#listes","text":"quantit\u00e9 maximale dans une liste : liste de quantit\u00e9s quantit\u00e9 minimale dans une liste : liste de quantit\u00e9s fusionner plusieurs listes : liste de listes s\u00e9lectionner des \u00e9l\u00e9ments : liste de valeurs, index de d\u00e9but, index de fin","title":"Listes"},{"location":"fr/concepts/recipes/setters/#valeurs","text":"nombre al\u00e9atoire : quantit\u00e9 minimale (0), quantit\u00e9 maximale (1), nombre de d\u00e9cimales (2) pi : nombre de d\u00e9cimales (15) date actuelle : variation de retour (\"timestamp\")","title":"Valeurs"},{"location":"fr/concepts/storage/","text":"Stockage Le Stockage permet la conservation de donn\u00e9es sous diff\u00e9rentes formes textuelles et binaires.","title":"Stockage"},{"location":"fr/concepts/storage/#stockage","text":"Le Stockage permet la conservation de donn\u00e9es sous diff\u00e9rentes formes textuelles et binaires.","title":"Stockage"},{"location":"fr/concepts/storage/collections/","tags":["alpha"],"text":"Collections Une Collection permet la conservation de donn\u00e9es d\u00e9crites avec des Champs. Les Champs sont d\u00e9finis par un Format . Une Collection contient des Items.","title":"Collections"},{"location":"fr/concepts/storage/collections/#collections","text":"Une Collection permet la conservation de donn\u00e9es d\u00e9crites avec des Champs. Les Champs sont d\u00e9finis par un Format . Une Collection contient des Items.","title":"Collections"},{"location":"fr/concepts/storage/containers/","tags":["stable"],"text":"Conteneurs Les Conteneurs d\u00e9crivent le fonctionnement d'une image pour l'utiliser dans un D\u00e9ploiement . Sont d\u00e9crits : les proc\u00e9dures de fonctionnement n\u00e9cessaires les variables environnement disponibles les dossiers n\u00e9cessitant une persistance les ports disponibles les ressources recommand\u00e9es en m\u00e9moire et en processeur","title":"Conteneurs"},{"location":"fr/concepts/storage/containers/#conteneurs","text":"Les Conteneurs d\u00e9crivent le fonctionnement d'une image pour l'utiliser dans un D\u00e9ploiement . Sont d\u00e9crits : les proc\u00e9dures de fonctionnement n\u00e9cessaires les variables environnement disponibles les dossiers n\u00e9cessitant une persistance les ports disponibles les ressources recommand\u00e9es en m\u00e9moire et en processeur","title":"Conteneurs"},{"location":"fr/concepts/storage/logs/","tags":["alpha"],"text":"Journalisation La Journalisation permet de stocker des flux de sortie de programmes afin de conserver les traces de leur ex\u00e9cution. Ils peuvent par exemple \u00eatre utilis\u00e9s avec un D\u00e9ploiement pour conserver ses journaux.","title":"Journalisation"},{"location":"fr/concepts/storage/logs/#journalisation","text":"La Journalisation permet de stocker des flux de sortie de programmes afin de conserver les traces de leur ex\u00e9cution. Ils peuvent par exemple \u00eatre utilis\u00e9s avec un D\u00e9ploiement pour conserver ses journaux.","title":"Journalisation"},{"location":"fr/concepts/storage/metrics/","tags":["alpha"],"text":"M\u00e9triques Les M\u00e9triques sont des nombres stock\u00e9es par rapport au temps afin de g\u00e9n\u00e9rer des statistiques chronologiques.","title":"M\u00e9triques"},{"location":"fr/concepts/storage/metrics/#metriques","text":"Les M\u00e9triques sont des nombres stock\u00e9es par rapport au temps afin de g\u00e9n\u00e9rer des statistiques chronologiques.","title":"M\u00e9triques"},{"location":"fr/concepts/storage/repositories/","tags":["stable"],"text":"D\u00e9p\u00f4ts Les D\u00e9p\u00f4ts permettent de stocker du code source avec un versionnement Git.","title":"D\u00e9p\u00f4ts"},{"location":"fr/concepts/storage/repositories/#depots","text":"Les D\u00e9p\u00f4ts permettent de stocker du code source avec un versionnement Git.","title":"D\u00e9p\u00f4ts"},{"location":"fr/concepts/storage/values/","tags":["beta"],"text":"Valeurs Les Valeurs sont des donn\u00e9es brutes stock\u00e9es sous la forme de Recettes correspondant \u00e0 un Format sp\u00e9cifique.","title":"Valeurs"},{"location":"fr/concepts/storage/values/#valeurs","text":"Les Valeurs sont des donn\u00e9es brutes stock\u00e9es sous la forme de Recettes correspondant \u00e0 un Format sp\u00e9cifique.","title":"Valeurs"},{"location":"fr/concepts/storage/volumes/","tags":["alpha"],"text":"Volumes Les Volumes permettent de stocker des fichiers statiques (images, vid\u00e9os...) au niveau d'un Propri\u00e9taire , il sera ensuite possible de d'utiliser ses Fichiers dans des Recettes . Pour cr\u00e9er un Volume, il faut indiquer un montant en Gigaoctet (Go) \u00e0 r\u00e9server. Les sauvegardes des Volumes est param\u00e9trable pour augmenter ou diminuer sa r\u00e9gularit\u00e9.","title":"Volumes"},{"location":"fr/concepts/storage/volumes/#volumes","text":"Les Volumes permettent de stocker des fichiers statiques (images, vid\u00e9os...) au niveau d'un Propri\u00e9taire , il sera ensuite possible de d'utiliser ses Fichiers dans des Recettes . Pour cr\u00e9er un Volume, il faut indiquer un montant en Gigaoctet (Go) \u00e0 r\u00e9server. Les sauvegardes des Volumes est param\u00e9trable pour augmenter ou diminuer sa r\u00e9gularit\u00e9.","title":"Volumes"},{"location":"fr/concepts/validations/","text":"Validations Les Validations permettent la v\u00e9rification de donn\u00e9es.","title":"Validations"},{"location":"fr/concepts/validations/#validations","text":"Les Validations permettent la v\u00e9rification de donn\u00e9es.","title":"Validations"},{"location":"fr/concepts/validations/issues/","tags":["alpha"],"text":"Anomalies","title":"Anomalies"},{"location":"fr/concepts/validations/issues/#anomalies","text":"","title":"Anomalies"}]}